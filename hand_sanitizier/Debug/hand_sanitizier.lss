
hand_sanitizier.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         00000e4a  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         0000000c  00800060  00000e4a  00000ede  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .bss          00000004  0080006c  0080006c  00000eea  2**0
                  ALLOC
  3 .comment      0000005c  00000000  00000000  00000eea  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 0000003c  00000000  00000000  00000f48  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 000001f8  00000000  00000000  00000f84  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   000035e2  00000000  00000000  0000117c  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 000010a2  00000000  00000000  0000475e  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   00000c8b  00000000  00000000  00005800  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  00000448  00000000  00000000  0000648c  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    00000be9  00000000  00000000  000068d4  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    0000109d  00000000  00000000  000074bd  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000198  00000000  00000000  0000855a  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 2a 00 	jmp	0x54	; 0x54 <__ctors_end>
   4:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
   8:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
   c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  10:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  14:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  18:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  1c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  20:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  24:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  28:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  2c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  30:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  34:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  38:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  3c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  40:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  44:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  48:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  4c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  50:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>

00000054 <__ctors_end>:
  54:	11 24       	eor	r1, r1
  56:	1f be       	out	0x3f, r1	; 63
  58:	cf e5       	ldi	r28, 0x5F	; 95
  5a:	d4 e0       	ldi	r29, 0x04	; 4
  5c:	de bf       	out	0x3e, r29	; 62
  5e:	cd bf       	out	0x3d, r28	; 61

00000060 <__do_copy_data>:
  60:	10 e0       	ldi	r17, 0x00	; 0
  62:	a0 e6       	ldi	r26, 0x60	; 96
  64:	b0 e0       	ldi	r27, 0x00	; 0
  66:	ea e4       	ldi	r30, 0x4A	; 74
  68:	fe e0       	ldi	r31, 0x0E	; 14
  6a:	02 c0       	rjmp	.+4      	; 0x70 <__do_copy_data+0x10>
  6c:	05 90       	lpm	r0, Z+
  6e:	0d 92       	st	X+, r0
  70:	ac 36       	cpi	r26, 0x6C	; 108
  72:	b1 07       	cpc	r27, r17
  74:	d9 f7       	brne	.-10     	; 0x6c <__do_copy_data+0xc>

00000076 <__do_clear_bss>:
  76:	20 e0       	ldi	r18, 0x00	; 0
  78:	ac e6       	ldi	r26, 0x6C	; 108
  7a:	b0 e0       	ldi	r27, 0x00	; 0
  7c:	01 c0       	rjmp	.+2      	; 0x80 <.do_clear_bss_start>

0000007e <.do_clear_bss_loop>:
  7e:	1d 92       	st	X+, r1

00000080 <.do_clear_bss_start>:
  80:	a0 37       	cpi	r26, 0x70	; 112
  82:	b2 07       	cpc	r27, r18
  84:	e1 f7       	brne	.-8      	; 0x7e <.do_clear_bss_loop>
  86:	0e 94 11 02 	call	0x422	; 0x422 <main>
  8a:	0c 94 23 07 	jmp	0xe46	; 0xe46 <_exit>

0000008e <__bad_interrupt>:
  8e:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

00000092 <_ZN8CAvrGpio4InitEPVhai>:

#include "AvrGpio.h"

void CAvrGpio::Init(volatile uint8_t* gpioBase,int8_t pinNumber,int mode)
{
	m_gpioBase=gpioBase;
  92:	dc 01       	movw	r26, r24
  94:	6d 93       	st	X+, r22
  96:	7c 93       	st	X, r23
	m_pinNumber=1<<pinNumber;
  98:	e1 e0       	ldi	r30, 0x01	; 1
  9a:	f0 e0       	ldi	r31, 0x00	; 0
  9c:	df 01       	movw	r26, r30
  9e:	02 c0       	rjmp	.+4      	; 0xa4 <_ZN8CAvrGpio4InitEPVhai+0x12>
  a0:	aa 0f       	add	r26, r26
  a2:	bb 1f       	adc	r27, r27
  a4:	4a 95       	dec	r20
  a6:	e2 f7       	brpl	.-8      	; 0xa0 <_ZN8CAvrGpio4InitEPVhai+0xe>
  a8:	ad 01       	movw	r20, r26
  aa:	fc 01       	movw	r30, r24
  ac:	a2 83       	std	Z+2, r26	; 0x02
	if(mode)
  ae:	23 2b       	or	r18, r19
  b0:	41 f0       	breq	.+16     	; 0xc2 <_ZN8CAvrGpio4InitEPVhai+0x30>
		*(m_gpioBase+1)|=m_pinNumber;	
  b2:	db 01       	movw	r26, r22
  b4:	11 96       	adiw	r26, 0x01	; 1
  b6:	8c 91       	ld	r24, X
  b8:	11 97       	sbiw	r26, 0x01	; 1
  ba:	48 2b       	or	r20, r24
  bc:	11 96       	adiw	r26, 0x01	; 1
  be:	4c 93       	st	X, r20
  c0:	08 95       	ret
	else
		*(m_gpioBase+1)&=~(m_pinNumber);
  c2:	fb 01       	movw	r30, r22
  c4:	81 81       	ldd	r24, Z+1	; 0x01
  c6:	40 95       	com	r20
  c8:	48 23       	and	r20, r24
  ca:	41 83       	std	Z+1, r20	; 0x01
  cc:	08 95       	ret

000000ce <_ZN8CAvrGpio3SetEv>:
}

void CAvrGpio::Set()
{
  ce:	dc 01       	movw	r26, r24
	*(m_gpioBase+2)|=m_pinNumber;
  d0:	ed 91       	ld	r30, X+
  d2:	fc 91       	ld	r31, X
  d4:	11 97       	sbiw	r26, 0x01	; 1
  d6:	92 81       	ldd	r25, Z+2	; 0x02
  d8:	12 96       	adiw	r26, 0x02	; 2
  da:	8c 91       	ld	r24, X
  dc:	89 2b       	or	r24, r25
  de:	82 83       	std	Z+2, r24	; 0x02
  e0:	08 95       	ret

000000e2 <_ZN8CAvrGpio3GetEv>:
}

bool CAvrGpio::Get()
{
  e2:	fc 01       	movw	r30, r24
	return *(m_gpioBase)&m_pinNumber;
  e4:	a0 81       	ld	r26, Z
  e6:	b1 81       	ldd	r27, Z+1	; 0x01
  e8:	9c 91       	ld	r25, X
  ea:	22 81       	ldd	r18, Z+2	; 0x02
  ec:	02 2e       	mov	r0, r18
  ee:	00 0c       	add	r0, r0
  f0:	33 0b       	sbc	r19, r19
  f2:	89 2f       	mov	r24, r25
  f4:	90 e0       	ldi	r25, 0x00	; 0
  f6:	28 23       	and	r18, r24
  f8:	39 23       	and	r19, r25
  fa:	81 e0       	ldi	r24, 0x01	; 1
  fc:	23 2b       	or	r18, r19
  fe:	09 f4       	brne	.+2      	; 0x102 <_ZN8CAvrGpio3GetEv+0x20>
 100:	80 e0       	ldi	r24, 0x00	; 0
}
 102:	08 95       	ret

00000104 <_ZN8CAvrGpio5ClearEv>:

void CAvrGpio::Clear()
{
 104:	dc 01       	movw	r26, r24
	*(m_gpioBase+2)&=~(m_pinNumber);
 106:	ed 91       	ld	r30, X+
 108:	fc 91       	ld	r31, X
 10a:	11 97       	sbiw	r26, 0x01	; 1
 10c:	92 81       	ldd	r25, Z+2	; 0x02
 10e:	12 96       	adiw	r26, 0x02	; 2
 110:	8c 91       	ld	r24, X
 112:	80 95       	com	r24
 114:	89 23       	and	r24, r25
 116:	82 83       	std	Z+2, r24	; 0x02
 118:	08 95       	ret

0000011a <_ZN8CAvrGpio6ToggleEv>:
}

void CAvrGpio::Toggle()
{
 11a:	cf 93       	push	r28
 11c:	df 93       	push	r29
 11e:	ec 01       	movw	r28, r24
	if(Get())
 120:	0e 94 71 00 	call	0xe2	; 0xe2 <_ZN8CAvrGpio3GetEv>
 124:	88 23       	and	r24, r24
 126:	21 f0       	breq	.+8      	; 0x130 <_ZN8CAvrGpio6ToggleEv+0x16>
		Clear();
 128:	ce 01       	movw	r24, r28
 12a:	0e 94 82 00 	call	0x104	; 0x104 <_ZN8CAvrGpio5ClearEv>
 12e:	03 c0       	rjmp	.+6      	; 0x136 <_ZN8CAvrGpio6ToggleEv+0x1c>
	else
		Set();
 130:	ce 01       	movw	r24, r28
 132:	0e 94 67 00 	call	0xce	; 0xce <_ZN8CAvrGpio3SetEv>
}
 136:	df 91       	pop	r29
 138:	cf 91       	pop	r28
 13a:	08 95       	ret

0000013c <_ZN8CAvrGpioC1Ev>:

// default constructor
CAvrGpio::CAvrGpio()
 13c:	08 95       	ret

0000013e <_ZN9CAvrTimer4InitENS_12avrPrescalerE>:

#include "AvrTimer.h"

void CAvrTimer::Init(avrPrescaler prescaler)
{
	TCCR1B=(uint8_t)prescaler;
 13e:	6e bd       	out	0x2e, r22	; 46
 140:	08 95       	ret

00000142 <_ZN9CAvrTimer7GetTickEv>:
}

uint16_t CAvrTimer::GetTick()
{
	return TCNT1;
 142:	8c b5       	in	r24, 0x2c	; 44
 144:	9d b5       	in	r25, 0x2d	; 45
}
 146:	08 95       	ret

00000148 <_ZN9CAvrTimerC1Ev>:

// default constructor
CAvrTimer::CAvrTimer()
 148:	08 95       	ret

0000014a <_ZN10CHeartBeat4InitEP8CAvrGpioP9CAvrTimerj>:


#include "HeartBeat.h"

void CHeartBeat::Init(CAvrGpio *ledInstance,CAvrTimer *timerInstance,uint16_t period)
{
 14a:	0f 93       	push	r16
 14c:	1f 93       	push	r17
 14e:	cf 93       	push	r28
 150:	df 93       	push	r29
 152:	89 01       	movw	r16, r18
	m_led=ledInstance;
 154:	ec 01       	movw	r28, r24
 156:	69 93       	st	Y+, r22
 158:	79 93       	st	Y+, r23
	m_timer.Init(timerInstance);
 15a:	ba 01       	movw	r22, r20
 15c:	ce 01       	movw	r24, r28
 15e:	0e 94 dd 02 	call	0x5ba	; 0x5ba <_ZN8CTimeout4InitEP9CAvrTimer>
	m_timer.SetExpiry(period);
 162:	b8 01       	movw	r22, r16
 164:	ce 01       	movw	r24, r28
 166:	0e 94 ee 02 	call	0x5dc	; 0x5dc <_ZN8CTimeout9SetExpiryEj>
}
 16a:	df 91       	pop	r29
 16c:	cf 91       	pop	r28
 16e:	1f 91       	pop	r17
 170:	0f 91       	pop	r16
 172:	08 95       	ret

00000174 <_ZN10CHeartBeat7ExecuteEv>:
	
void CHeartBeat::Execute()
{
 174:	0f 93       	push	r16
 176:	1f 93       	push	r17
 178:	cf 93       	push	r28
 17a:	df 93       	push	r29
 17c:	ec 01       	movw	r28, r24
	if(!m_timer.HasElapsed())
 17e:	8c 01       	movw	r16, r24
 180:	0e 5f       	subi	r16, 0xFE	; 254
 182:	1f 4f       	sbci	r17, 0xFF	; 255
 184:	c8 01       	movw	r24, r16
 186:	0e 94 f4 02 	call	0x5e8	; 0x5e8 <_ZN8CTimeout10HasElapsedEv>
 18a:	88 23       	and	r24, r24
 18c:	39 f0       	breq	.+14     	; 0x19c <_ZN10CHeartBeat7ExecuteEv+0x28>
		return;
	m_timer.Reset();
 18e:	c8 01       	movw	r24, r16
 190:	0e 94 e1 02 	call	0x5c2	; 0x5c2 <_ZN8CTimeout5ResetEv>
	m_led->Toggle();
 194:	88 81       	ld	r24, Y
 196:	99 81       	ldd	r25, Y+1	; 0x01
 198:	0e 94 8d 00 	call	0x11a	; 0x11a <_ZN8CAvrGpio6ToggleEv>
	
}
 19c:	df 91       	pop	r29
 19e:	cf 91       	pop	r28
 1a0:	1f 91       	pop	r17
 1a2:	0f 91       	pop	r16
 1a4:	08 95       	ret

000001a6 <_ZN10CHeartBeatC1Ev>:

// default constructor
CHeartBeat::CHeartBeat()
 1a6:	02 96       	adiw	r24, 0x02	; 2
 1a8:	0e 94 0d 03 	call	0x61a	; 0x61a <_ZN8CTimeoutC1Ev>
 1ac:	08 95       	ret

000001ae <_ZN4CLcd11WriteNibbleEh>:
}

void CLcd::SetCursor(uint8_t col, uint8_t row)
{
    static uint8_t offsets[] = { 0x00, 0x40, 0x14, 0x54 };
    Command(LCD_SETDDRAMADDR | (col + offsets[row]));
 1ae:	cf 92       	push	r12
 1b0:	df 92       	push	r13
 1b2:	ef 92       	push	r14
 1b4:	ff 92       	push	r15
 1b6:	0f 93       	push	r16
 1b8:	1f 93       	push	r17
 1ba:	cf 93       	push	r28
 1bc:	df 93       	push	r29
 1be:	7c 01       	movw	r14, r24
 1c0:	00 e0       	ldi	r16, 0x00	; 0
 1c2:	10 e0       	ldi	r17, 0x00	; 0
 1c4:	c0 e0       	ldi	r28, 0x00	; 0
 1c6:	d0 e0       	ldi	r29, 0x00	; 0
 1c8:	c6 2e       	mov	r12, r22
 1ca:	d1 2c       	mov	r13, r1
 1cc:	c6 01       	movw	r24, r12
 1ce:	0c 2e       	mov	r0, r28
 1d0:	02 c0       	rjmp	.+4      	; 0x1d6 <_ZN4CLcd11WriteNibbleEh+0x28>
 1d2:	95 95       	asr	r25
 1d4:	87 95       	ror	r24
 1d6:	0a 94       	dec	r0
 1d8:	e2 f7       	brpl	.-8      	; 0x1d2 <_ZN4CLcd11WriteNibbleEh+0x24>
 1da:	80 ff       	sbrs	r24, 0
 1dc:	0c c0       	rjmp	.+24     	; 0x1f6 <_ZN4CLcd11WriteNibbleEh+0x48>
 1de:	d7 01       	movw	r26, r14
 1e0:	16 96       	adiw	r26, 0x06	; 6
 1e2:	ed 91       	ld	r30, X+
 1e4:	fc 91       	ld	r31, X
 1e6:	17 97       	sbiw	r26, 0x07	; 7
 1e8:	e0 0f       	add	r30, r16
 1ea:	f1 1f       	adc	r31, r17
 1ec:	80 81       	ld	r24, Z
 1ee:	91 81       	ldd	r25, Z+1	; 0x01
 1f0:	0e 94 67 00 	call	0xce	; 0xce <_ZN8CAvrGpio3SetEv>
 1f4:	0b c0       	rjmp	.+22     	; 0x20c <_ZN4CLcd11WriteNibbleEh+0x5e>
 1f6:	d7 01       	movw	r26, r14
 1f8:	16 96       	adiw	r26, 0x06	; 6
 1fa:	ed 91       	ld	r30, X+
 1fc:	fc 91       	ld	r31, X
 1fe:	17 97       	sbiw	r26, 0x07	; 7
 200:	e0 0f       	add	r30, r16
 202:	f1 1f       	adc	r31, r17
 204:	80 81       	ld	r24, Z
 206:	91 81       	ldd	r25, Z+1	; 0x01
 208:	0e 94 82 00 	call	0x104	; 0x104 <_ZN8CAvrGpio5ClearEv>
 20c:	21 96       	adiw	r28, 0x01	; 1
 20e:	0e 5f       	subi	r16, 0xFE	; 254
 210:	1f 4f       	sbci	r17, 0xFF	; 255
 212:	c4 30       	cpi	r28, 0x04	; 4
 214:	d1 05       	cpc	r29, r1
 216:	d1 f6       	brne	.-76     	; 0x1cc <_ZN4CLcd11WriteNibbleEh+0x1e>
 218:	f7 01       	movw	r30, r14
 21a:	82 81       	ldd	r24, Z+2	; 0x02
 21c:	93 81       	ldd	r25, Z+3	; 0x03
 21e:	0e 94 82 00 	call	0x104	; 0x104 <_ZN8CAvrGpio5ClearEv>
 222:	d7 01       	movw	r26, r14
 224:	12 96       	adiw	r26, 0x02	; 2
 226:	8d 91       	ld	r24, X+
 228:	9c 91       	ld	r25, X
 22a:	13 97       	sbiw	r26, 0x03	; 3
 22c:	0e 94 67 00 	call	0xce	; 0xce <_ZN8CAvrGpio3SetEv>
 230:	f7 01       	movw	r30, r14
 232:	82 81       	ldd	r24, Z+2	; 0x02
 234:	93 81       	ldd	r25, Z+3	; 0x03
 236:	0e 94 82 00 	call	0x104	; 0x104 <_ZN8CAvrGpio5ClearEv>
 23a:	8f e9       	ldi	r24, 0x9F	; 159
 23c:	9f e0       	ldi	r25, 0x0F	; 15
 23e:	01 97       	sbiw	r24, 0x01	; 1
 240:	f1 f7       	brne	.-4      	; 0x23e <_ZN4CLcd11WriteNibbleEh+0x90>
 242:	00 c0       	rjmp	.+0      	; 0x244 <_ZN4CLcd11WriteNibbleEh+0x96>
 244:	00 00       	nop
 246:	df 91       	pop	r29
 248:	cf 91       	pop	r28
 24a:	1f 91       	pop	r17
 24c:	0f 91       	pop	r16
 24e:	ff 90       	pop	r15
 250:	ef 90       	pop	r14
 252:	df 90       	pop	r13
 254:	cf 90       	pop	r12
 256:	08 95       	ret

00000258 <_ZN4CLcd4SendEhh>:
 258:	1f 93       	push	r17
 25a:	cf 93       	push	r28
 25c:	df 93       	push	r29
 25e:	ec 01       	movw	r28, r24
 260:	16 2f       	mov	r17, r22
 262:	44 23       	and	r20, r20
 264:	29 f0       	breq	.+10     	; 0x270 <_ZN4CLcd4SendEhh+0x18>
 266:	88 81       	ld	r24, Y
 268:	99 81       	ldd	r25, Y+1	; 0x01
 26a:	0e 94 67 00 	call	0xce	; 0xce <_ZN8CAvrGpio3SetEv>
 26e:	04 c0       	rjmp	.+8      	; 0x278 <_ZN4CLcd4SendEhh+0x20>
 270:	88 81       	ld	r24, Y
 272:	99 81       	ldd	r25, Y+1	; 0x01
 274:	0e 94 82 00 	call	0x104	; 0x104 <_ZN8CAvrGpio5ClearEv>
 278:	8c 81       	ldd	r24, Y+4	; 0x04
 27a:	9d 81       	ldd	r25, Y+5	; 0x05
 27c:	0e 94 82 00 	call	0x104	; 0x104 <_ZN8CAvrGpio5ClearEv>
 280:	61 2f       	mov	r22, r17
 282:	70 e0       	ldi	r23, 0x00	; 0
 284:	75 95       	asr	r23
 286:	67 95       	ror	r22
 288:	75 95       	asr	r23
 28a:	67 95       	ror	r22
 28c:	75 95       	asr	r23
 28e:	67 95       	ror	r22
 290:	75 95       	asr	r23
 292:	67 95       	ror	r22
 294:	ce 01       	movw	r24, r28
 296:	0e 94 d7 00 	call	0x1ae	; 0x1ae <_ZN4CLcd11WriteNibbleEh>
 29a:	61 2f       	mov	r22, r17
 29c:	ce 01       	movw	r24, r28
 29e:	0e 94 d7 00 	call	0x1ae	; 0x1ae <_ZN4CLcd11WriteNibbleEh>
 2a2:	df 91       	pop	r29
 2a4:	cf 91       	pop	r28
 2a6:	1f 91       	pop	r17
 2a8:	08 95       	ret

000002aa <_ZN4CLcd7CommandEh>:
 2aa:	40 e0       	ldi	r20, 0x00	; 0
 2ac:	0e 94 2c 01 	call	0x258	; 0x258 <_ZN4CLcd4SendEhh>
 2b0:	08 95       	ret

000002b2 <_ZN4CLcd5WriteEh>:
 2b2:	41 e0       	ldi	r20, 0x01	; 1
 2b4:	0e 94 2c 01 	call	0x258	; 0x258 <_ZN4CLcd4SendEhh>
 2b8:	08 95       	ret

000002ba <_ZN4CLcd4InitEP8CAvrGpioS1_S1_PS1_hh>:
 2ba:	cf 92       	push	r12
 2bc:	ef 92       	push	r14
 2be:	0f 93       	push	r16
 2c0:	1f 93       	push	r17
 2c2:	cf 93       	push	r28
 2c4:	df 93       	push	r29
 2c6:	ec 01       	movw	r28, r24
 2c8:	79 83       	std	Y+1, r23	; 0x01
 2ca:	68 83       	st	Y, r22
 2cc:	5b 83       	std	Y+3, r21	; 0x03
 2ce:	4a 83       	std	Y+2, r20	; 0x02
 2d0:	3d 83       	std	Y+5, r19	; 0x05
 2d2:	2c 83       	std	Y+4, r18	; 0x04
 2d4:	1f 83       	std	Y+7, r17	; 0x07
 2d6:	0e 83       	std	Y+6, r16	; 0x06
 2d8:	e8 86       	std	Y+8, r14	; 0x08
 2da:	c9 86       	std	Y+9, r12	; 0x09
 2dc:	8e 2d       	mov	r24, r14
 2de:	90 e0       	ldi	r25, 0x00	; 0
 2e0:	0e 94 0e 03 	call	0x61c	; 0x61c <malloc>
 2e4:	9c 87       	std	Y+12, r25	; 0x0c
 2e6:	8b 87       	std	Y+11, r24	; 0x0b
 2e8:	8f e5       	ldi	r24, 0x5F	; 95
 2ea:	9a ee       	ldi	r25, 0xEA	; 234
 2ec:	01 97       	sbiw	r24, 0x01	; 1
 2ee:	f1 f7       	brne	.-4      	; 0x2ec <_ZN4CLcd4InitEP8CAvrGpioS1_S1_PS1_hh+0x32>
 2f0:	00 c0       	rjmp	.+0      	; 0x2f2 <_ZN4CLcd4InitEP8CAvrGpioS1_S1_PS1_hh+0x38>
 2f2:	00 00       	nop
 2f4:	8a 81       	ldd	r24, Y+2	; 0x02
 2f6:	9b 81       	ldd	r25, Y+3	; 0x03
 2f8:	0e 94 82 00 	call	0x104	; 0x104 <_ZN8CAvrGpio5ClearEv>
 2fc:	88 81       	ld	r24, Y
 2fe:	99 81       	ldd	r25, Y+1	; 0x01
 300:	0e 94 82 00 	call	0x104	; 0x104 <_ZN8CAvrGpio5ClearEv>
 304:	8c 81       	ldd	r24, Y+4	; 0x04
 306:	9d 81       	ldd	r25, Y+5	; 0x05
 308:	0e 94 82 00 	call	0x104	; 0x104 <_ZN8CAvrGpio5ClearEv>
 30c:	8f e1       	ldi	r24, 0x1F	; 31
 30e:	9e e4       	ldi	r25, 0x4E	; 78
 310:	01 97       	sbiw	r24, 0x01	; 1
 312:	f1 f7       	brne	.-4      	; 0x310 <_ZN4CLcd4InitEP8CAvrGpioS1_S1_PS1_hh+0x56>
 314:	00 c0       	rjmp	.+0      	; 0x316 <_ZN4CLcd4InitEP8CAvrGpioS1_S1_PS1_hh+0x5c>
 316:	00 00       	nop
 318:	63 e0       	ldi	r22, 0x03	; 3
 31a:	ce 01       	movw	r24, r28
 31c:	0e 94 d7 00 	call	0x1ae	; 0x1ae <_ZN4CLcd11WriteNibbleEh>
 320:	8f e1       	ldi	r24, 0x1F	; 31
 322:	9e e4       	ldi	r25, 0x4E	; 78
 324:	01 97       	sbiw	r24, 0x01	; 1
 326:	f1 f7       	brne	.-4      	; 0x324 <_ZN4CLcd4InitEP8CAvrGpioS1_S1_PS1_hh+0x6a>
 328:	00 c0       	rjmp	.+0      	; 0x32a <_ZN4CLcd4InitEP8CAvrGpioS1_S1_PS1_hh+0x70>
 32a:	00 00       	nop
 32c:	63 e0       	ldi	r22, 0x03	; 3
 32e:	ce 01       	movw	r24, r28
 330:	0e 94 d7 00 	call	0x1ae	; 0x1ae <_ZN4CLcd11WriteNibbleEh>
 334:	8f e1       	ldi	r24, 0x1F	; 31
 336:	9e e4       	ldi	r25, 0x4E	; 78
 338:	01 97       	sbiw	r24, 0x01	; 1
 33a:	f1 f7       	brne	.-4      	; 0x338 <_ZN4CLcd4InitEP8CAvrGpioS1_S1_PS1_hh+0x7e>
 33c:	00 c0       	rjmp	.+0      	; 0x33e <_ZN4CLcd4InitEP8CAvrGpioS1_S1_PS1_hh+0x84>
 33e:	00 00       	nop
 340:	63 e0       	ldi	r22, 0x03	; 3
 342:	ce 01       	movw	r24, r28
 344:	0e 94 d7 00 	call	0x1ae	; 0x1ae <_ZN4CLcd11WriteNibbleEh>
 348:	8f e1       	ldi	r24, 0x1F	; 31
 34a:	9e e4       	ldi	r25, 0x4E	; 78
 34c:	01 97       	sbiw	r24, 0x01	; 1
 34e:	f1 f7       	brne	.-4      	; 0x34c <_ZN4CLcd4InitEP8CAvrGpioS1_S1_PS1_hh+0x92>
 350:	00 c0       	rjmp	.+0      	; 0x352 <_ZN4CLcd4InitEP8CAvrGpioS1_S1_PS1_hh+0x98>
 352:	00 00       	nop
 354:	62 e0       	ldi	r22, 0x02	; 2
 356:	ce 01       	movw	r24, r28
 358:	0e 94 d7 00 	call	0x1ae	; 0x1ae <_ZN4CLcd11WriteNibbleEh>
 35c:	68 e2       	ldi	r22, 0x28	; 40
 35e:	ce 01       	movw	r24, r28
 360:	0e 94 55 01 	call	0x2aa	; 0x2aa <_ZN4CLcd7CommandEh>
 364:	1a 86       	std	Y+10, r1	; 0x0a
 366:	68 e0       	ldi	r22, 0x08	; 8
 368:	ce 01       	movw	r24, r28
 36a:	0e 94 55 01 	call	0x2aa	; 0x2aa <_ZN4CLcd7CommandEh>
 36e:	df 91       	pop	r29
 370:	cf 91       	pop	r28
 372:	1f 91       	pop	r17
 374:	0f 91       	pop	r16
 376:	ef 90       	pop	r14
 378:	cf 90       	pop	r12
 37a:	08 95       	ret

0000037c <_ZN4CLcd2OnEv>:
 37c:	fc 01       	movw	r30, r24
 37e:	62 85       	ldd	r22, Z+10	; 0x0a
 380:	26 2f       	mov	r18, r22
 382:	24 60       	ori	r18, 0x04	; 4
 384:	22 87       	std	Z+10, r18	; 0x0a
 386:	6c 60       	ori	r22, 0x0C	; 12
 388:	0e 94 55 01 	call	0x2aa	; 0x2aa <_ZN4CLcd7CommandEh>
 38c:	08 95       	ret

0000038e <_ZN4CLcd5ClearEv>:
 38e:	61 e0       	ldi	r22, 0x01	; 1
 390:	0e 94 55 01 	call	0x2aa	; 0x2aa <_ZN4CLcd7CommandEh>
 394:	8f e3       	ldi	r24, 0x3F	; 63
 396:	9f e1       	ldi	r25, 0x1F	; 31
 398:	01 97       	sbiw	r24, 0x01	; 1
 39a:	f1 f7       	brne	.-4      	; 0x398 <_ZN4CLcd5ClearEv+0xa>
 39c:	00 c0       	rjmp	.+0      	; 0x39e <_ZN4CLcd5ClearEv+0x10>
 39e:	00 00       	nop
 3a0:	08 95       	ret

000003a2 <_ZN4CLcd10ReturnHomeEv>:
 3a2:	62 e0       	ldi	r22, 0x02	; 2
 3a4:	0e 94 55 01 	call	0x2aa	; 0x2aa <_ZN4CLcd7CommandEh>
 3a8:	8f e3       	ldi	r24, 0x3F	; 63
 3aa:	9f e1       	ldi	r25, 0x1F	; 31
 3ac:	01 97       	sbiw	r24, 0x01	; 1
 3ae:	f1 f7       	brne	.-4      	; 0x3ac <_ZN4CLcd10ReturnHomeEv+0xa>
 3b0:	00 c0       	rjmp	.+0      	; 0x3b2 <_ZN4CLcd10ReturnHomeEv+0x10>
 3b2:	00 00       	nop
 3b4:	08 95       	ret

000003b6 <_ZN4CLcd5LputsEPc>:
}

void CLcd::Lputs(char *string)
{
 3b6:	0f 93       	push	r16
 3b8:	1f 93       	push	r17
 3ba:	cf 93       	push	r28
 3bc:	df 93       	push	r29
 3be:	eb 01       	movw	r28, r22
    for (char *it = string; *it; it++) {
 3c0:	68 81       	ld	r22, Y
 3c2:	66 23       	and	r22, r22
 3c4:	41 f0       	breq	.+16     	; 0x3d6 <_ZN4CLcd5LputsEPc+0x20>
 3c6:	8c 01       	movw	r16, r24
 3c8:	21 96       	adiw	r28, 0x01	; 1
        Write(*it);
 3ca:	c8 01       	movw	r24, r16
 3cc:	0e 94 59 01 	call	0x2b2	; 0x2b2 <_ZN4CLcd5WriteEh>
    Command(LCD_SETDDRAMADDR | (col + offsets[row]));
}

void CLcd::Lputs(char *string)
{
    for (char *it = string; *it; it++) {
 3d0:	69 91       	ld	r22, Y+
 3d2:	61 11       	cpse	r22, r1
 3d4:	fa cf       	rjmp	.-12     	; 0x3ca <_ZN4CLcd5LputsEPc+0x14>
        Write(*it);
    }
}
 3d6:	df 91       	pop	r29
 3d8:	cf 91       	pop	r28
 3da:	1f 91       	pop	r17
 3dc:	0f 91       	pop	r16
 3de:	08 95       	ret

000003e0 <_ZN4CLcd7LprintfEPcz>:

void CLcd::Lprintf(char *format, ...)
{
 3e0:	0f 93       	push	r16
 3e2:	1f 93       	push	r17
 3e4:	cf 93       	push	r28
 3e6:	df 93       	push	r29
 3e8:	cd b7       	in	r28, 0x3d	; 61
 3ea:	de b7       	in	r29, 0x3e	; 62
 3ec:	0f 81       	ldd	r16, Y+7	; 0x07
 3ee:	18 85       	ldd	r17, Y+8	; 0x08
    va_list args;

    va_start(args, format);
    vsnprintf(m_buffer, m_col + 1, format, args);
 3f0:	f8 01       	movw	r30, r16
 3f2:	60 85       	ldd	r22, Z+8	; 0x08
 3f4:	70 e0       	ldi	r23, 0x00	; 0
 3f6:	6f 5f       	subi	r22, 0xFF	; 255
 3f8:	7f 4f       	sbci	r23, 0xFF	; 255
 3fa:	9e 01       	movw	r18, r28
 3fc:	25 5f       	subi	r18, 0xF5	; 245
 3fe:	3f 4f       	sbci	r19, 0xFF	; 255
 400:	49 85       	ldd	r20, Y+9	; 0x09
 402:	5a 85       	ldd	r21, Y+10	; 0x0a
 404:	83 85       	ldd	r24, Z+11	; 0x0b
 406:	94 85       	ldd	r25, Z+12	; 0x0c
 408:	0e 94 2f 04 	call	0x85e	; 0x85e <vsnprintf>
    va_end(args);

    Lputs(m_buffer);
 40c:	f8 01       	movw	r30, r16
 40e:	63 85       	ldd	r22, Z+11	; 0x0b
 410:	74 85       	ldd	r23, Z+12	; 0x0c
 412:	c8 01       	movw	r24, r16
 414:	0e 94 db 01 	call	0x3b6	; 0x3b6 <_ZN4CLcd5LputsEPc>
}
 418:	df 91       	pop	r29
 41a:	cf 91       	pop	r28
 41c:	1f 91       	pop	r17
 41e:	0f 91       	pop	r16
 420:	08 95       	ret

00000422 <main>:
#include "PinMapping.h"
#include "lcd.h"


int main(void)
{
 422:	cf 93       	push	r28
 424:	df 93       	push	r29
 426:	cd b7       	in	r28, 0x3d	; 61
 428:	de b7       	in	r29, 0x3e	; 62
 42a:	e7 97       	sbiw	r28, 0x37	; 55
 42c:	0f b6       	in	r0, 0x3f	; 63
 42e:	f8 94       	cli
 430:	de bf       	out	0x3e, r29	; 62
 432:	0f be       	out	0x3f, r0	; 63
 434:	cd bf       	out	0x3d, r28	; 61
	// heartbeat init
	CHeartBeat heartBeat;
 436:	ce 01       	movw	r24, r28
 438:	01 96       	adiw	r24, 0x01	; 1
 43a:	0e 94 d3 00 	call	0x1a6	; 0x1a6 <_ZN10CHeartBeatC1Ev>
	CAvrGpio led;
 43e:	ce 01       	movw	r24, r28
 440:	0a 96       	adiw	r24, 0x0a	; 10
 442:	0e 94 9e 00 	call	0x13c	; 0x13c <_ZN8CAvrGpioC1Ev>
	CAvrTimer timer;
 446:	ce 01       	movw	r24, r28
 448:	0d 96       	adiw	r24, 0x0d	; 13
 44a:	0e 94 a4 00 	call	0x148	; 0x148 <_ZN9CAvrTimerC1Ev>
	led.Init(PIN_HEARTBEAT,1);
 44e:	21 e0       	ldi	r18, 0x01	; 1
 450:	30 e0       	ldi	r19, 0x00	; 0
 452:	40 e0       	ldi	r20, 0x00	; 0
 454:	66 e3       	ldi	r22, 0x36	; 54
 456:	70 e0       	ldi	r23, 0x00	; 0
 458:	ce 01       	movw	r24, r28
 45a:	0a 96       	adiw	r24, 0x0a	; 10
 45c:	0e 94 49 00 	call	0x92	; 0x92 <_ZN8CAvrGpio4InitEPVhai>
	timer.Init(CAvrTimer::psc256);
 460:	64 e0       	ldi	r22, 0x04	; 4
 462:	ce 01       	movw	r24, r28
 464:	0d 96       	adiw	r24, 0x0d	; 13
 466:	0e 94 9f 00 	call	0x13e	; 0x13e <_ZN9CAvrTimer4InitENS_12avrPrescalerE>
	heartBeat.Init(&led,&timer,30000);
 46a:	20 e3       	ldi	r18, 0x30	; 48
 46c:	35 e7       	ldi	r19, 0x75	; 117
 46e:	ae 01       	movw	r20, r28
 470:	43 5f       	subi	r20, 0xF3	; 243
 472:	5f 4f       	sbci	r21, 0xFF	; 255
 474:	be 01       	movw	r22, r28
 476:	66 5f       	subi	r22, 0xF6	; 246
 478:	7f 4f       	sbci	r23, 0xFF	; 255
 47a:	ce 01       	movw	r24, r28
 47c:	01 96       	adiw	r24, 0x01	; 1
 47e:	0e 94 a5 00 	call	0x14a	; 0x14a <_ZN10CHeartBeat4InitEP8CAvrGpioP9CAvrTimerj>
    
    // lcd init
    CAvrGpio pRs;
 482:	ce 01       	movw	r24, r28
 484:	0e 96       	adiw	r24, 0x0e	; 14
 486:	0e 94 9e 00 	call	0x13c	; 0x13c <_ZN8CAvrGpioC1Ev>
    CAvrGpio pEn;
 48a:	ce 01       	movw	r24, r28
 48c:	41 96       	adiw	r24, 0x11	; 17
 48e:	0e 94 9e 00 	call	0x13c	; 0x13c <_ZN8CAvrGpioC1Ev>
    CAvrGpio pRw;
 492:	ce 01       	movw	r24, r28
 494:	44 96       	adiw	r24, 0x14	; 20
 496:	0e 94 9e 00 	call	0x13c	; 0x13c <_ZN8CAvrGpioC1Ev>
    CAvrGpio dT[4];
 49a:	6e 01       	movw	r12, r28
 49c:	87 e1       	ldi	r24, 0x17	; 23
 49e:	c8 0e       	add	r12, r24
 4a0:	d1 1c       	adc	r13, r1
 4a2:	c6 01       	movw	r24, r12
 4a4:	0e 94 9e 00 	call	0x13c	; 0x13c <_ZN8CAvrGpioC1Ev>
 4a8:	7e 01       	movw	r14, r28
 4aa:	8a e1       	ldi	r24, 0x1A	; 26
 4ac:	e8 0e       	add	r14, r24
 4ae:	f1 1c       	adc	r15, r1
 4b0:	c7 01       	movw	r24, r14
 4b2:	0e 94 9e 00 	call	0x13c	; 0x13c <_ZN8CAvrGpioC1Ev>
 4b6:	8e 01       	movw	r16, r28
 4b8:	03 5e       	subi	r16, 0xE3	; 227
 4ba:	1f 4f       	sbci	r17, 0xFF	; 255
 4bc:	c8 01       	movw	r24, r16
 4be:	0e 94 9e 00 	call	0x13c	; 0x13c <_ZN8CAvrGpioC1Ev>
 4c2:	5e 01       	movw	r10, r28
 4c4:	80 e2       	ldi	r24, 0x20	; 32
 4c6:	a8 0e       	add	r10, r24
 4c8:	b1 1c       	adc	r11, r1
 4ca:	c5 01       	movw	r24, r10
 4cc:	0e 94 9e 00 	call	0x13c	; 0x13c <_ZN8CAvrGpioC1Ev>
    CAvrGpio *pDt[4];
    pRs.Init(PIN_RS,1);
 4d0:	21 e0       	ldi	r18, 0x01	; 1
 4d2:	30 e0       	ldi	r19, 0x00	; 0
 4d4:	40 e0       	ldi	r20, 0x00	; 0
 4d6:	63 e3       	ldi	r22, 0x33	; 51
 4d8:	70 e0       	ldi	r23, 0x00	; 0
 4da:	ce 01       	movw	r24, r28
 4dc:	0e 96       	adiw	r24, 0x0e	; 14
 4de:	0e 94 49 00 	call	0x92	; 0x92 <_ZN8CAvrGpio4InitEPVhai>
    pEn.Init(PIN_EN,1);
 4e2:	21 e0       	ldi	r18, 0x01	; 1
 4e4:	30 e0       	ldi	r19, 0x00	; 0
 4e6:	42 e0       	ldi	r20, 0x02	; 2
 4e8:	63 e3       	ldi	r22, 0x33	; 51
 4ea:	70 e0       	ldi	r23, 0x00	; 0
 4ec:	ce 01       	movw	r24, r28
 4ee:	41 96       	adiw	r24, 0x11	; 17
 4f0:	0e 94 49 00 	call	0x92	; 0x92 <_ZN8CAvrGpio4InitEPVhai>
    pRw.Init(PIN_RW,1);
 4f4:	21 e0       	ldi	r18, 0x01	; 1
 4f6:	30 e0       	ldi	r19, 0x00	; 0
 4f8:	41 e0       	ldi	r20, 0x01	; 1
 4fa:	63 e3       	ldi	r22, 0x33	; 51
 4fc:	70 e0       	ldi	r23, 0x00	; 0
 4fe:	ce 01       	movw	r24, r28
 500:	44 96       	adiw	r24, 0x14	; 20
 502:	0e 94 49 00 	call	0x92	; 0x92 <_ZN8CAvrGpio4InitEPVhai>
    dT[0].Init(PIN_DT4,1);
 506:	21 e0       	ldi	r18, 0x01	; 1
 508:	30 e0       	ldi	r19, 0x00	; 0
 50a:	44 e0       	ldi	r20, 0x04	; 4
 50c:	63 e3       	ldi	r22, 0x33	; 51
 50e:	70 e0       	ldi	r23, 0x00	; 0
 510:	c6 01       	movw	r24, r12
 512:	0e 94 49 00 	call	0x92	; 0x92 <_ZN8CAvrGpio4InitEPVhai>
    dT[1].Init(PIN_DT5,1);
 516:	21 e0       	ldi	r18, 0x01	; 1
 518:	30 e0       	ldi	r19, 0x00	; 0
 51a:	45 e0       	ldi	r20, 0x05	; 5
 51c:	63 e3       	ldi	r22, 0x33	; 51
 51e:	70 e0       	ldi	r23, 0x00	; 0
 520:	c7 01       	movw	r24, r14
 522:	0e 94 49 00 	call	0x92	; 0x92 <_ZN8CAvrGpio4InitEPVhai>
    dT[2].Init(PIN_DT6,1);
 526:	21 e0       	ldi	r18, 0x01	; 1
 528:	30 e0       	ldi	r19, 0x00	; 0
 52a:	46 e0       	ldi	r20, 0x06	; 6
 52c:	63 e3       	ldi	r22, 0x33	; 51
 52e:	70 e0       	ldi	r23, 0x00	; 0
 530:	c8 01       	movw	r24, r16
 532:	0e 94 49 00 	call	0x92	; 0x92 <_ZN8CAvrGpio4InitEPVhai>
    dT[3].Init(PIN_DT7,1);
 536:	21 e0       	ldi	r18, 0x01	; 1
 538:	30 e0       	ldi	r19, 0x00	; 0
 53a:	47 e0       	ldi	r20, 0x07	; 7
 53c:	63 e3       	ldi	r22, 0x33	; 51
 53e:	70 e0       	ldi	r23, 0x00	; 0
 540:	c5 01       	movw	r24, r10
 542:	0e 94 49 00 	call	0x92	; 0x92 <_ZN8CAvrGpio4InitEPVhai>
    for(uint8_t i=0;i<4;i++)
    {
        pDt[i] = &dT[i];
 546:	dc a2       	std	Y+36, r13	; 0x24
 548:	cb a2       	std	Y+35, r12	; 0x23
 54a:	fe a2       	std	Y+38, r15	; 0x26
 54c:	ed a2       	std	Y+37, r14	; 0x25
 54e:	18 a7       	std	Y+40, r17	; 0x28
 550:	0f a3       	std	Y+39, r16	; 0x27
 552:	ba a6       	std	Y+42, r11	; 0x2a
 554:	a9 a6       	std	Y+41, r10	; 0x29
    };   
    CLcd lcd;
    lcd.Init(&pRs,&pEn,&pRw,pDt);
 556:	5e 01       	movw	r10, r28
 558:	8b e2       	ldi	r24, 0x2B	; 43
 55a:	a8 0e       	add	r10, r24
 55c:	b1 1c       	adc	r11, r1
 55e:	68 94       	set
 560:	cc 24       	eor	r12, r12
 562:	c1 f8       	bld	r12, 1
 564:	68 94       	set
 566:	ee 24       	eor	r14, r14
 568:	e4 f8       	bld	r14, 4
 56a:	0a 5f       	subi	r16, 0xFA	; 250
 56c:	1f 4f       	sbci	r17, 0xFF	; 255
 56e:	9e 01       	movw	r18, r28
 570:	2c 5e       	subi	r18, 0xEC	; 236
 572:	3f 4f       	sbci	r19, 0xFF	; 255
 574:	ae 01       	movw	r20, r28
 576:	4f 5e       	subi	r20, 0xEF	; 239
 578:	5f 4f       	sbci	r21, 0xFF	; 255
 57a:	be 01       	movw	r22, r28
 57c:	62 5f       	subi	r22, 0xF2	; 242
 57e:	7f 4f       	sbci	r23, 0xFF	; 255
 580:	c5 01       	movw	r24, r10
 582:	0e 94 5d 01 	call	0x2ba	; 0x2ba <_ZN4CLcd4InitEP8CAvrGpioS1_S1_PS1_hh>
    lcd.On();
 586:	c5 01       	movw	r24, r10
 588:	0e 94 be 01 	call	0x37c	; 0x37c <_ZN4CLcd2OnEv>
    lcd.ReturnHome();
 58c:	c5 01       	movw	r24, r10
 58e:	0e 94 d1 01 	call	0x3a2	; 0x3a2 <_ZN4CLcd10ReturnHomeEv>
    lcd.Clear();
 592:	c5 01       	movw	r24, r10
 594:	0e 94 c7 01 	call	0x38e	; 0x38e <_ZN4CLcd5ClearEv>
    lcd.Lprintf("haha");
 598:	86 e6       	ldi	r24, 0x66	; 102
 59a:	90 e0       	ldi	r25, 0x00	; 0
 59c:	9f 93       	push	r25
 59e:	8f 93       	push	r24
 5a0:	bf 92       	push	r11
 5a2:	af 92       	push	r10
 5a4:	0e 94 f0 01 	call	0x3e0	; 0x3e0 <_ZN4CLcd7LprintfEPcz>
 5a8:	0f 90       	pop	r0
 5aa:	0f 90       	pop	r0
 5ac:	0f 90       	pop	r0
 5ae:	0f 90       	pop	r0
    while (1) 
    {
        heartBeat.Execute();
 5b0:	ce 01       	movw	r24, r28
 5b2:	01 96       	adiw	r24, 0x01	; 1
 5b4:	0e 94 ba 00 	call	0x174	; 0x174 <_ZN10CHeartBeat7ExecuteEv>
 5b8:	fb cf       	rjmp	.-10     	; 0x5b0 <__stack+0x151>

000005ba <_ZN8CTimeout4InitEP9CAvrTimer>:

#include "Timeout.h"

void CTimeout::Init(CAvrTimer *timerInstance)
{
	m_timer=timerInstance;
 5ba:	fc 01       	movw	r30, r24
 5bc:	71 83       	std	Z+1, r23	; 0x01
 5be:	60 83       	st	Z, r22
 5c0:	08 95       	ret

000005c2 <_ZN8CTimeout5ResetEv>:
}

void CTimeout::Reset()
{
 5c2:	cf 93       	push	r28
 5c4:	df 93       	push	r29
 5c6:	ec 01       	movw	r28, r24
	m_prevTimer=m_timer->GetTick();
 5c8:	88 81       	ld	r24, Y
 5ca:	99 81       	ldd	r25, Y+1	; 0x01
 5cc:	0e 94 a1 00 	call	0x142	; 0x142 <_ZN9CAvrTimer7GetTickEv>
 5d0:	9d 83       	std	Y+5, r25	; 0x05
 5d2:	8c 83       	std	Y+4, r24	; 0x04
	m_hasElapsed=false;
 5d4:	1e 82       	std	Y+6, r1	; 0x06
}
 5d6:	df 91       	pop	r29
 5d8:	cf 91       	pop	r28
 5da:	08 95       	ret

000005dc <_ZN8CTimeout9SetExpiryEj>:

void CTimeout::SetExpiry(uint16_t tick)
{
	m_expiry=tick;
 5dc:	fc 01       	movw	r30, r24
 5de:	73 83       	std	Z+3, r23	; 0x03
 5e0:	62 83       	std	Z+2, r22	; 0x02
	Reset();
 5e2:	0e 94 e1 02 	call	0x5c2	; 0x5c2 <_ZN8CTimeout5ResetEv>
 5e6:	08 95       	ret

000005e8 <_ZN8CTimeout10HasElapsedEv>:
}

bool CTimeout::HasElapsed()
{
 5e8:	cf 93       	push	r28
 5ea:	df 93       	push	r29
 5ec:	ec 01       	movw	r28, r24
	if(!m_hasElapsed)
 5ee:	8e 81       	ldd	r24, Y+6	; 0x06
 5f0:	81 11       	cpse	r24, r1
 5f2:	0f c0       	rjmp	.+30     	; 0x612 <_ZN8CTimeout10HasElapsedEv+0x2a>
	if(m_timer->GetTick()-m_prevTimer>=m_expiry)
 5f4:	88 81       	ld	r24, Y
 5f6:	99 81       	ldd	r25, Y+1	; 0x01
 5f8:	0e 94 a1 00 	call	0x142	; 0x142 <_ZN9CAvrTimer7GetTickEv>
 5fc:	2c 81       	ldd	r18, Y+4	; 0x04
 5fe:	3d 81       	ldd	r19, Y+5	; 0x05
 600:	82 1b       	sub	r24, r18
 602:	93 0b       	sbc	r25, r19
 604:	2a 81       	ldd	r18, Y+2	; 0x02
 606:	3b 81       	ldd	r19, Y+3	; 0x03
 608:	82 17       	cp	r24, r18
 60a:	93 07       	cpc	r25, r19
 60c:	10 f0       	brcs	.+4      	; 0x612 <_ZN8CTimeout10HasElapsedEv+0x2a>
	m_hasElapsed=true;
 60e:	81 e0       	ldi	r24, 0x01	; 1
 610:	8e 83       	std	Y+6, r24	; 0x06
	
	return m_hasElapsed;
}
 612:	8e 81       	ldd	r24, Y+6	; 0x06
 614:	df 91       	pop	r29
 616:	cf 91       	pop	r28
 618:	08 95       	ret

0000061a <_ZN8CTimeoutC1Ev>:

// default constructor
CTimeout::CTimeout()
 61a:	08 95       	ret

0000061c <malloc>:
 61c:	0f 93       	push	r16
 61e:	1f 93       	push	r17
 620:	cf 93       	push	r28
 622:	df 93       	push	r29
 624:	82 30       	cpi	r24, 0x02	; 2
 626:	91 05       	cpc	r25, r1
 628:	10 f4       	brcc	.+4      	; 0x62e <malloc+0x12>
 62a:	82 e0       	ldi	r24, 0x02	; 2
 62c:	90 e0       	ldi	r25, 0x00	; 0
 62e:	e0 91 6e 00 	lds	r30, 0x006E	; 0x80006e <__flp>
 632:	f0 91 6f 00 	lds	r31, 0x006F	; 0x80006f <__flp+0x1>
 636:	20 e0       	ldi	r18, 0x00	; 0
 638:	30 e0       	ldi	r19, 0x00	; 0
 63a:	a0 e0       	ldi	r26, 0x00	; 0
 63c:	b0 e0       	ldi	r27, 0x00	; 0
 63e:	30 97       	sbiw	r30, 0x00	; 0
 640:	19 f1       	breq	.+70     	; 0x688 <malloc+0x6c>
 642:	40 81       	ld	r20, Z
 644:	51 81       	ldd	r21, Z+1	; 0x01
 646:	02 81       	ldd	r16, Z+2	; 0x02
 648:	13 81       	ldd	r17, Z+3	; 0x03
 64a:	48 17       	cp	r20, r24
 64c:	59 07       	cpc	r21, r25
 64e:	c8 f0       	brcs	.+50     	; 0x682 <malloc+0x66>
 650:	84 17       	cp	r24, r20
 652:	95 07       	cpc	r25, r21
 654:	69 f4       	brne	.+26     	; 0x670 <malloc+0x54>
 656:	10 97       	sbiw	r26, 0x00	; 0
 658:	31 f0       	breq	.+12     	; 0x666 <malloc+0x4a>
 65a:	12 96       	adiw	r26, 0x02	; 2
 65c:	0c 93       	st	X, r16
 65e:	12 97       	sbiw	r26, 0x02	; 2
 660:	13 96       	adiw	r26, 0x03	; 3
 662:	1c 93       	st	X, r17
 664:	27 c0       	rjmp	.+78     	; 0x6b4 <malloc+0x98>
 666:	00 93 6e 00 	sts	0x006E, r16	; 0x80006e <__flp>
 66a:	10 93 6f 00 	sts	0x006F, r17	; 0x80006f <__flp+0x1>
 66e:	22 c0       	rjmp	.+68     	; 0x6b4 <malloc+0x98>
 670:	21 15       	cp	r18, r1
 672:	31 05       	cpc	r19, r1
 674:	19 f0       	breq	.+6      	; 0x67c <malloc+0x60>
 676:	42 17       	cp	r20, r18
 678:	53 07       	cpc	r21, r19
 67a:	18 f4       	brcc	.+6      	; 0x682 <malloc+0x66>
 67c:	9a 01       	movw	r18, r20
 67e:	bd 01       	movw	r22, r26
 680:	ef 01       	movw	r28, r30
 682:	df 01       	movw	r26, r30
 684:	f8 01       	movw	r30, r16
 686:	db cf       	rjmp	.-74     	; 0x63e <malloc+0x22>
 688:	21 15       	cp	r18, r1
 68a:	31 05       	cpc	r19, r1
 68c:	f9 f0       	breq	.+62     	; 0x6cc <malloc+0xb0>
 68e:	28 1b       	sub	r18, r24
 690:	39 0b       	sbc	r19, r25
 692:	24 30       	cpi	r18, 0x04	; 4
 694:	31 05       	cpc	r19, r1
 696:	80 f4       	brcc	.+32     	; 0x6b8 <malloc+0x9c>
 698:	8a 81       	ldd	r24, Y+2	; 0x02
 69a:	9b 81       	ldd	r25, Y+3	; 0x03
 69c:	61 15       	cp	r22, r1
 69e:	71 05       	cpc	r23, r1
 6a0:	21 f0       	breq	.+8      	; 0x6aa <malloc+0x8e>
 6a2:	fb 01       	movw	r30, r22
 6a4:	93 83       	std	Z+3, r25	; 0x03
 6a6:	82 83       	std	Z+2, r24	; 0x02
 6a8:	04 c0       	rjmp	.+8      	; 0x6b2 <malloc+0x96>
 6aa:	90 93 6f 00 	sts	0x006F, r25	; 0x80006f <__flp+0x1>
 6ae:	80 93 6e 00 	sts	0x006E, r24	; 0x80006e <__flp>
 6b2:	fe 01       	movw	r30, r28
 6b4:	32 96       	adiw	r30, 0x02	; 2
 6b6:	44 c0       	rjmp	.+136    	; 0x740 <malloc+0x124>
 6b8:	fe 01       	movw	r30, r28
 6ba:	e2 0f       	add	r30, r18
 6bc:	f3 1f       	adc	r31, r19
 6be:	81 93       	st	Z+, r24
 6c0:	91 93       	st	Z+, r25
 6c2:	22 50       	subi	r18, 0x02	; 2
 6c4:	31 09       	sbc	r19, r1
 6c6:	39 83       	std	Y+1, r19	; 0x01
 6c8:	28 83       	st	Y, r18
 6ca:	3a c0       	rjmp	.+116    	; 0x740 <malloc+0x124>
 6cc:	20 91 6c 00 	lds	r18, 0x006C	; 0x80006c <__data_end>
 6d0:	30 91 6d 00 	lds	r19, 0x006D	; 0x80006d <__data_end+0x1>
 6d4:	23 2b       	or	r18, r19
 6d6:	41 f4       	brne	.+16     	; 0x6e8 <malloc+0xcc>
 6d8:	20 91 62 00 	lds	r18, 0x0062	; 0x800062 <__malloc_heap_start>
 6dc:	30 91 63 00 	lds	r19, 0x0063	; 0x800063 <__malloc_heap_start+0x1>
 6e0:	30 93 6d 00 	sts	0x006D, r19	; 0x80006d <__data_end+0x1>
 6e4:	20 93 6c 00 	sts	0x006C, r18	; 0x80006c <__data_end>
 6e8:	20 91 60 00 	lds	r18, 0x0060	; 0x800060 <__DATA_REGION_ORIGIN__>
 6ec:	30 91 61 00 	lds	r19, 0x0061	; 0x800061 <__DATA_REGION_ORIGIN__+0x1>
 6f0:	21 15       	cp	r18, r1
 6f2:	31 05       	cpc	r19, r1
 6f4:	41 f4       	brne	.+16     	; 0x706 <malloc+0xea>
 6f6:	2d b7       	in	r18, 0x3d	; 61
 6f8:	3e b7       	in	r19, 0x3e	; 62
 6fa:	40 91 64 00 	lds	r20, 0x0064	; 0x800064 <__malloc_margin>
 6fe:	50 91 65 00 	lds	r21, 0x0065	; 0x800065 <__malloc_margin+0x1>
 702:	24 1b       	sub	r18, r20
 704:	35 0b       	sbc	r19, r21
 706:	e0 91 6c 00 	lds	r30, 0x006C	; 0x80006c <__data_end>
 70a:	f0 91 6d 00 	lds	r31, 0x006D	; 0x80006d <__data_end+0x1>
 70e:	e2 17       	cp	r30, r18
 710:	f3 07       	cpc	r31, r19
 712:	a0 f4       	brcc	.+40     	; 0x73c <malloc+0x120>
 714:	2e 1b       	sub	r18, r30
 716:	3f 0b       	sbc	r19, r31
 718:	28 17       	cp	r18, r24
 71a:	39 07       	cpc	r19, r25
 71c:	78 f0       	brcs	.+30     	; 0x73c <malloc+0x120>
 71e:	ac 01       	movw	r20, r24
 720:	4e 5f       	subi	r20, 0xFE	; 254
 722:	5f 4f       	sbci	r21, 0xFF	; 255
 724:	24 17       	cp	r18, r20
 726:	35 07       	cpc	r19, r21
 728:	48 f0       	brcs	.+18     	; 0x73c <malloc+0x120>
 72a:	4e 0f       	add	r20, r30
 72c:	5f 1f       	adc	r21, r31
 72e:	50 93 6d 00 	sts	0x006D, r21	; 0x80006d <__data_end+0x1>
 732:	40 93 6c 00 	sts	0x006C, r20	; 0x80006c <__data_end>
 736:	81 93       	st	Z+, r24
 738:	91 93       	st	Z+, r25
 73a:	02 c0       	rjmp	.+4      	; 0x740 <malloc+0x124>
 73c:	e0 e0       	ldi	r30, 0x00	; 0
 73e:	f0 e0       	ldi	r31, 0x00	; 0
 740:	cf 01       	movw	r24, r30
 742:	df 91       	pop	r29
 744:	cf 91       	pop	r28
 746:	1f 91       	pop	r17
 748:	0f 91       	pop	r16
 74a:	08 95       	ret

0000074c <free>:
 74c:	cf 93       	push	r28
 74e:	df 93       	push	r29
 750:	00 97       	sbiw	r24, 0x00	; 0
 752:	09 f4       	brne	.+2      	; 0x756 <free+0xa>
 754:	81 c0       	rjmp	.+258    	; 0x858 <free+0x10c>
 756:	fc 01       	movw	r30, r24
 758:	32 97       	sbiw	r30, 0x02	; 2
 75a:	13 82       	std	Z+3, r1	; 0x03
 75c:	12 82       	std	Z+2, r1	; 0x02
 75e:	a0 91 6e 00 	lds	r26, 0x006E	; 0x80006e <__flp>
 762:	b0 91 6f 00 	lds	r27, 0x006F	; 0x80006f <__flp+0x1>
 766:	10 97       	sbiw	r26, 0x00	; 0
 768:	81 f4       	brne	.+32     	; 0x78a <free+0x3e>
 76a:	20 81       	ld	r18, Z
 76c:	31 81       	ldd	r19, Z+1	; 0x01
 76e:	82 0f       	add	r24, r18
 770:	93 1f       	adc	r25, r19
 772:	20 91 6c 00 	lds	r18, 0x006C	; 0x80006c <__data_end>
 776:	30 91 6d 00 	lds	r19, 0x006D	; 0x80006d <__data_end+0x1>
 77a:	28 17       	cp	r18, r24
 77c:	39 07       	cpc	r19, r25
 77e:	51 f5       	brne	.+84     	; 0x7d4 <free+0x88>
 780:	f0 93 6d 00 	sts	0x006D, r31	; 0x80006d <__data_end+0x1>
 784:	e0 93 6c 00 	sts	0x006C, r30	; 0x80006c <__data_end>
 788:	67 c0       	rjmp	.+206    	; 0x858 <free+0x10c>
 78a:	ed 01       	movw	r28, r26
 78c:	20 e0       	ldi	r18, 0x00	; 0
 78e:	30 e0       	ldi	r19, 0x00	; 0
 790:	ce 17       	cp	r28, r30
 792:	df 07       	cpc	r29, r31
 794:	40 f4       	brcc	.+16     	; 0x7a6 <free+0x5a>
 796:	4a 81       	ldd	r20, Y+2	; 0x02
 798:	5b 81       	ldd	r21, Y+3	; 0x03
 79a:	9e 01       	movw	r18, r28
 79c:	41 15       	cp	r20, r1
 79e:	51 05       	cpc	r21, r1
 7a0:	f1 f0       	breq	.+60     	; 0x7de <free+0x92>
 7a2:	ea 01       	movw	r28, r20
 7a4:	f5 cf       	rjmp	.-22     	; 0x790 <free+0x44>
 7a6:	d3 83       	std	Z+3, r29	; 0x03
 7a8:	c2 83       	std	Z+2, r28	; 0x02
 7aa:	40 81       	ld	r20, Z
 7ac:	51 81       	ldd	r21, Z+1	; 0x01
 7ae:	84 0f       	add	r24, r20
 7b0:	95 1f       	adc	r25, r21
 7b2:	c8 17       	cp	r28, r24
 7b4:	d9 07       	cpc	r29, r25
 7b6:	59 f4       	brne	.+22     	; 0x7ce <free+0x82>
 7b8:	88 81       	ld	r24, Y
 7ba:	99 81       	ldd	r25, Y+1	; 0x01
 7bc:	84 0f       	add	r24, r20
 7be:	95 1f       	adc	r25, r21
 7c0:	02 96       	adiw	r24, 0x02	; 2
 7c2:	91 83       	std	Z+1, r25	; 0x01
 7c4:	80 83       	st	Z, r24
 7c6:	8a 81       	ldd	r24, Y+2	; 0x02
 7c8:	9b 81       	ldd	r25, Y+3	; 0x03
 7ca:	93 83       	std	Z+3, r25	; 0x03
 7cc:	82 83       	std	Z+2, r24	; 0x02
 7ce:	21 15       	cp	r18, r1
 7d0:	31 05       	cpc	r19, r1
 7d2:	29 f4       	brne	.+10     	; 0x7de <free+0x92>
 7d4:	f0 93 6f 00 	sts	0x006F, r31	; 0x80006f <__flp+0x1>
 7d8:	e0 93 6e 00 	sts	0x006E, r30	; 0x80006e <__flp>
 7dc:	3d c0       	rjmp	.+122    	; 0x858 <free+0x10c>
 7de:	e9 01       	movw	r28, r18
 7e0:	fb 83       	std	Y+3, r31	; 0x03
 7e2:	ea 83       	std	Y+2, r30	; 0x02
 7e4:	49 91       	ld	r20, Y+
 7e6:	59 91       	ld	r21, Y+
 7e8:	c4 0f       	add	r28, r20
 7ea:	d5 1f       	adc	r29, r21
 7ec:	ec 17       	cp	r30, r28
 7ee:	fd 07       	cpc	r31, r29
 7f0:	61 f4       	brne	.+24     	; 0x80a <free+0xbe>
 7f2:	80 81       	ld	r24, Z
 7f4:	91 81       	ldd	r25, Z+1	; 0x01
 7f6:	84 0f       	add	r24, r20
 7f8:	95 1f       	adc	r25, r21
 7fa:	02 96       	adiw	r24, 0x02	; 2
 7fc:	e9 01       	movw	r28, r18
 7fe:	99 83       	std	Y+1, r25	; 0x01
 800:	88 83       	st	Y, r24
 802:	82 81       	ldd	r24, Z+2	; 0x02
 804:	93 81       	ldd	r25, Z+3	; 0x03
 806:	9b 83       	std	Y+3, r25	; 0x03
 808:	8a 83       	std	Y+2, r24	; 0x02
 80a:	e0 e0       	ldi	r30, 0x00	; 0
 80c:	f0 e0       	ldi	r31, 0x00	; 0
 80e:	12 96       	adiw	r26, 0x02	; 2
 810:	8d 91       	ld	r24, X+
 812:	9c 91       	ld	r25, X
 814:	13 97       	sbiw	r26, 0x03	; 3
 816:	00 97       	sbiw	r24, 0x00	; 0
 818:	19 f0       	breq	.+6      	; 0x820 <free+0xd4>
 81a:	fd 01       	movw	r30, r26
 81c:	dc 01       	movw	r26, r24
 81e:	f7 cf       	rjmp	.-18     	; 0x80e <free+0xc2>
 820:	8d 91       	ld	r24, X+
 822:	9c 91       	ld	r25, X
 824:	11 97       	sbiw	r26, 0x01	; 1
 826:	9d 01       	movw	r18, r26
 828:	2e 5f       	subi	r18, 0xFE	; 254
 82a:	3f 4f       	sbci	r19, 0xFF	; 255
 82c:	82 0f       	add	r24, r18
 82e:	93 1f       	adc	r25, r19
 830:	20 91 6c 00 	lds	r18, 0x006C	; 0x80006c <__data_end>
 834:	30 91 6d 00 	lds	r19, 0x006D	; 0x80006d <__data_end+0x1>
 838:	28 17       	cp	r18, r24
 83a:	39 07       	cpc	r19, r25
 83c:	69 f4       	brne	.+26     	; 0x858 <free+0x10c>
 83e:	30 97       	sbiw	r30, 0x00	; 0
 840:	29 f4       	brne	.+10     	; 0x84c <free+0x100>
 842:	10 92 6f 00 	sts	0x006F, r1	; 0x80006f <__flp+0x1>
 846:	10 92 6e 00 	sts	0x006E, r1	; 0x80006e <__flp>
 84a:	02 c0       	rjmp	.+4      	; 0x850 <free+0x104>
 84c:	13 82       	std	Z+3, r1	; 0x03
 84e:	12 82       	std	Z+2, r1	; 0x02
 850:	b0 93 6d 00 	sts	0x006D, r27	; 0x80006d <__data_end+0x1>
 854:	a0 93 6c 00 	sts	0x006C, r26	; 0x80006c <__data_end>
 858:	df 91       	pop	r29
 85a:	cf 91       	pop	r28
 85c:	08 95       	ret

0000085e <vsnprintf>:
 85e:	ae e0       	ldi	r26, 0x0E	; 14
 860:	b0 e0       	ldi	r27, 0x00	; 0
 862:	e5 e3       	ldi	r30, 0x35	; 53
 864:	f4 e0       	ldi	r31, 0x04	; 4
 866:	0c 94 fa 06 	jmp	0xdf4	; 0xdf4 <__prologue_saves__+0x1c>
 86a:	8c 01       	movw	r16, r24
 86c:	fa 01       	movw	r30, r20
 86e:	86 e0       	ldi	r24, 0x06	; 6
 870:	8c 83       	std	Y+4, r24	; 0x04
 872:	1a 83       	std	Y+2, r17	; 0x02
 874:	09 83       	std	Y+1, r16	; 0x01
 876:	77 ff       	sbrs	r23, 7
 878:	02 c0       	rjmp	.+4      	; 0x87e <vsnprintf+0x20>
 87a:	60 e0       	ldi	r22, 0x00	; 0
 87c:	70 e8       	ldi	r23, 0x80	; 128
 87e:	cb 01       	movw	r24, r22
 880:	01 97       	sbiw	r24, 0x01	; 1
 882:	9e 83       	std	Y+6, r25	; 0x06
 884:	8d 83       	std	Y+5, r24	; 0x05
 886:	a9 01       	movw	r20, r18
 888:	bf 01       	movw	r22, r30
 88a:	ce 01       	movw	r24, r28
 88c:	01 96       	adiw	r24, 0x01	; 1
 88e:	0e 94 5b 04 	call	0x8b6	; 0x8b6 <vfprintf>
 892:	4d 81       	ldd	r20, Y+5	; 0x05
 894:	5e 81       	ldd	r21, Y+6	; 0x06
 896:	57 fd       	sbrc	r21, 7
 898:	0a c0       	rjmp	.+20     	; 0x8ae <vsnprintf+0x50>
 89a:	2f 81       	ldd	r18, Y+7	; 0x07
 89c:	38 85       	ldd	r19, Y+8	; 0x08
 89e:	42 17       	cp	r20, r18
 8a0:	53 07       	cpc	r21, r19
 8a2:	0c f4       	brge	.+2      	; 0x8a6 <vsnprintf+0x48>
 8a4:	9a 01       	movw	r18, r20
 8a6:	f8 01       	movw	r30, r16
 8a8:	e2 0f       	add	r30, r18
 8aa:	f3 1f       	adc	r31, r19
 8ac:	10 82       	st	Z, r1
 8ae:	2e 96       	adiw	r28, 0x0e	; 14
 8b0:	e4 e0       	ldi	r30, 0x04	; 4
 8b2:	0c 94 16 07 	jmp	0xe2c	; 0xe2c <__epilogue_restores__+0x1c>

000008b6 <vfprintf>:
 8b6:	ab e0       	ldi	r26, 0x0B	; 11
 8b8:	b0 e0       	ldi	r27, 0x00	; 0
 8ba:	e1 e6       	ldi	r30, 0x61	; 97
 8bc:	f4 e0       	ldi	r31, 0x04	; 4
 8be:	0c 94 ec 06 	jmp	0xdd8	; 0xdd8 <__prologue_saves__>
 8c2:	6c 01       	movw	r12, r24
 8c4:	7b 01       	movw	r14, r22
 8c6:	8a 01       	movw	r16, r20
 8c8:	fc 01       	movw	r30, r24
 8ca:	17 82       	std	Z+7, r1	; 0x07
 8cc:	16 82       	std	Z+6, r1	; 0x06
 8ce:	83 81       	ldd	r24, Z+3	; 0x03
 8d0:	81 ff       	sbrs	r24, 1
 8d2:	cc c1       	rjmp	.+920    	; 0xc6c <vfprintf+0x3b6>
 8d4:	ce 01       	movw	r24, r28
 8d6:	01 96       	adiw	r24, 0x01	; 1
 8d8:	3c 01       	movw	r6, r24
 8da:	f6 01       	movw	r30, r12
 8dc:	93 81       	ldd	r25, Z+3	; 0x03
 8de:	f7 01       	movw	r30, r14
 8e0:	93 fd       	sbrc	r25, 3
 8e2:	85 91       	lpm	r24, Z+
 8e4:	93 ff       	sbrs	r25, 3
 8e6:	81 91       	ld	r24, Z+
 8e8:	7f 01       	movw	r14, r30
 8ea:	88 23       	and	r24, r24
 8ec:	09 f4       	brne	.+2      	; 0x8f0 <vfprintf+0x3a>
 8ee:	ba c1       	rjmp	.+884    	; 0xc64 <vfprintf+0x3ae>
 8f0:	85 32       	cpi	r24, 0x25	; 37
 8f2:	39 f4       	brne	.+14     	; 0x902 <vfprintf+0x4c>
 8f4:	93 fd       	sbrc	r25, 3
 8f6:	85 91       	lpm	r24, Z+
 8f8:	93 ff       	sbrs	r25, 3
 8fa:	81 91       	ld	r24, Z+
 8fc:	7f 01       	movw	r14, r30
 8fe:	85 32       	cpi	r24, 0x25	; 37
 900:	29 f4       	brne	.+10     	; 0x90c <vfprintf+0x56>
 902:	b6 01       	movw	r22, r12
 904:	90 e0       	ldi	r25, 0x00	; 0
 906:	0e 94 52 06 	call	0xca4	; 0xca4 <fputc>
 90a:	e7 cf       	rjmp	.-50     	; 0x8da <vfprintf+0x24>
 90c:	91 2c       	mov	r9, r1
 90e:	21 2c       	mov	r2, r1
 910:	31 2c       	mov	r3, r1
 912:	ff e1       	ldi	r31, 0x1F	; 31
 914:	f3 15       	cp	r31, r3
 916:	d8 f0       	brcs	.+54     	; 0x94e <vfprintf+0x98>
 918:	8b 32       	cpi	r24, 0x2B	; 43
 91a:	79 f0       	breq	.+30     	; 0x93a <vfprintf+0x84>
 91c:	38 f4       	brcc	.+14     	; 0x92c <vfprintf+0x76>
 91e:	80 32       	cpi	r24, 0x20	; 32
 920:	79 f0       	breq	.+30     	; 0x940 <vfprintf+0x8a>
 922:	83 32       	cpi	r24, 0x23	; 35
 924:	a1 f4       	brne	.+40     	; 0x94e <vfprintf+0x98>
 926:	23 2d       	mov	r18, r3
 928:	20 61       	ori	r18, 0x10	; 16
 92a:	1d c0       	rjmp	.+58     	; 0x966 <vfprintf+0xb0>
 92c:	8d 32       	cpi	r24, 0x2D	; 45
 92e:	61 f0       	breq	.+24     	; 0x948 <vfprintf+0x92>
 930:	80 33       	cpi	r24, 0x30	; 48
 932:	69 f4       	brne	.+26     	; 0x94e <vfprintf+0x98>
 934:	23 2d       	mov	r18, r3
 936:	21 60       	ori	r18, 0x01	; 1
 938:	16 c0       	rjmp	.+44     	; 0x966 <vfprintf+0xb0>
 93a:	83 2d       	mov	r24, r3
 93c:	82 60       	ori	r24, 0x02	; 2
 93e:	38 2e       	mov	r3, r24
 940:	e3 2d       	mov	r30, r3
 942:	e4 60       	ori	r30, 0x04	; 4
 944:	3e 2e       	mov	r3, r30
 946:	2a c0       	rjmp	.+84     	; 0x99c <vfprintf+0xe6>
 948:	f3 2d       	mov	r31, r3
 94a:	f8 60       	ori	r31, 0x08	; 8
 94c:	1d c0       	rjmp	.+58     	; 0x988 <vfprintf+0xd2>
 94e:	37 fc       	sbrc	r3, 7
 950:	2d c0       	rjmp	.+90     	; 0x9ac <vfprintf+0xf6>
 952:	20 ed       	ldi	r18, 0xD0	; 208
 954:	28 0f       	add	r18, r24
 956:	2a 30       	cpi	r18, 0x0A	; 10
 958:	40 f0       	brcs	.+16     	; 0x96a <vfprintf+0xb4>
 95a:	8e 32       	cpi	r24, 0x2E	; 46
 95c:	b9 f4       	brne	.+46     	; 0x98c <vfprintf+0xd6>
 95e:	36 fc       	sbrc	r3, 6
 960:	81 c1       	rjmp	.+770    	; 0xc64 <vfprintf+0x3ae>
 962:	23 2d       	mov	r18, r3
 964:	20 64       	ori	r18, 0x40	; 64
 966:	32 2e       	mov	r3, r18
 968:	19 c0       	rjmp	.+50     	; 0x99c <vfprintf+0xe6>
 96a:	36 fe       	sbrs	r3, 6
 96c:	06 c0       	rjmp	.+12     	; 0x97a <vfprintf+0xc4>
 96e:	8a e0       	ldi	r24, 0x0A	; 10
 970:	98 9e       	mul	r9, r24
 972:	20 0d       	add	r18, r0
 974:	11 24       	eor	r1, r1
 976:	92 2e       	mov	r9, r18
 978:	11 c0       	rjmp	.+34     	; 0x99c <vfprintf+0xe6>
 97a:	ea e0       	ldi	r30, 0x0A	; 10
 97c:	2e 9e       	mul	r2, r30
 97e:	20 0d       	add	r18, r0
 980:	11 24       	eor	r1, r1
 982:	22 2e       	mov	r2, r18
 984:	f3 2d       	mov	r31, r3
 986:	f0 62       	ori	r31, 0x20	; 32
 988:	3f 2e       	mov	r3, r31
 98a:	08 c0       	rjmp	.+16     	; 0x99c <vfprintf+0xe6>
 98c:	8c 36       	cpi	r24, 0x6C	; 108
 98e:	21 f4       	brne	.+8      	; 0x998 <vfprintf+0xe2>
 990:	83 2d       	mov	r24, r3
 992:	80 68       	ori	r24, 0x80	; 128
 994:	38 2e       	mov	r3, r24
 996:	02 c0       	rjmp	.+4      	; 0x99c <vfprintf+0xe6>
 998:	88 36       	cpi	r24, 0x68	; 104
 99a:	41 f4       	brne	.+16     	; 0x9ac <vfprintf+0xf6>
 99c:	f7 01       	movw	r30, r14
 99e:	93 fd       	sbrc	r25, 3
 9a0:	85 91       	lpm	r24, Z+
 9a2:	93 ff       	sbrs	r25, 3
 9a4:	81 91       	ld	r24, Z+
 9a6:	7f 01       	movw	r14, r30
 9a8:	81 11       	cpse	r24, r1
 9aa:	b3 cf       	rjmp	.-154    	; 0x912 <vfprintf+0x5c>
 9ac:	98 2f       	mov	r25, r24
 9ae:	9f 7d       	andi	r25, 0xDF	; 223
 9b0:	95 54       	subi	r25, 0x45	; 69
 9b2:	93 30       	cpi	r25, 0x03	; 3
 9b4:	28 f4       	brcc	.+10     	; 0x9c0 <vfprintf+0x10a>
 9b6:	0c 5f       	subi	r16, 0xFC	; 252
 9b8:	1f 4f       	sbci	r17, 0xFF	; 255
 9ba:	9f e3       	ldi	r25, 0x3F	; 63
 9bc:	99 83       	std	Y+1, r25	; 0x01
 9be:	0d c0       	rjmp	.+26     	; 0x9da <vfprintf+0x124>
 9c0:	83 36       	cpi	r24, 0x63	; 99
 9c2:	31 f0       	breq	.+12     	; 0x9d0 <vfprintf+0x11a>
 9c4:	83 37       	cpi	r24, 0x73	; 115
 9c6:	71 f0       	breq	.+28     	; 0x9e4 <vfprintf+0x12e>
 9c8:	83 35       	cpi	r24, 0x53	; 83
 9ca:	09 f0       	breq	.+2      	; 0x9ce <vfprintf+0x118>
 9cc:	59 c0       	rjmp	.+178    	; 0xa80 <vfprintf+0x1ca>
 9ce:	21 c0       	rjmp	.+66     	; 0xa12 <vfprintf+0x15c>
 9d0:	f8 01       	movw	r30, r16
 9d2:	80 81       	ld	r24, Z
 9d4:	89 83       	std	Y+1, r24	; 0x01
 9d6:	0e 5f       	subi	r16, 0xFE	; 254
 9d8:	1f 4f       	sbci	r17, 0xFF	; 255
 9da:	88 24       	eor	r8, r8
 9dc:	83 94       	inc	r8
 9de:	91 2c       	mov	r9, r1
 9e0:	53 01       	movw	r10, r6
 9e2:	13 c0       	rjmp	.+38     	; 0xa0a <vfprintf+0x154>
 9e4:	28 01       	movw	r4, r16
 9e6:	f2 e0       	ldi	r31, 0x02	; 2
 9e8:	4f 0e       	add	r4, r31
 9ea:	51 1c       	adc	r5, r1
 9ec:	f8 01       	movw	r30, r16
 9ee:	a0 80       	ld	r10, Z
 9f0:	b1 80       	ldd	r11, Z+1	; 0x01
 9f2:	36 fe       	sbrs	r3, 6
 9f4:	03 c0       	rjmp	.+6      	; 0x9fc <vfprintf+0x146>
 9f6:	69 2d       	mov	r22, r9
 9f8:	70 e0       	ldi	r23, 0x00	; 0
 9fa:	02 c0       	rjmp	.+4      	; 0xa00 <vfprintf+0x14a>
 9fc:	6f ef       	ldi	r22, 0xFF	; 255
 9fe:	7f ef       	ldi	r23, 0xFF	; 255
 a00:	c5 01       	movw	r24, r10
 a02:	0e 94 47 06 	call	0xc8e	; 0xc8e <strnlen>
 a06:	4c 01       	movw	r8, r24
 a08:	82 01       	movw	r16, r4
 a0a:	f3 2d       	mov	r31, r3
 a0c:	ff 77       	andi	r31, 0x7F	; 127
 a0e:	3f 2e       	mov	r3, r31
 a10:	16 c0       	rjmp	.+44     	; 0xa3e <vfprintf+0x188>
 a12:	28 01       	movw	r4, r16
 a14:	22 e0       	ldi	r18, 0x02	; 2
 a16:	42 0e       	add	r4, r18
 a18:	51 1c       	adc	r5, r1
 a1a:	f8 01       	movw	r30, r16
 a1c:	a0 80       	ld	r10, Z
 a1e:	b1 80       	ldd	r11, Z+1	; 0x01
 a20:	36 fe       	sbrs	r3, 6
 a22:	03 c0       	rjmp	.+6      	; 0xa2a <vfprintf+0x174>
 a24:	69 2d       	mov	r22, r9
 a26:	70 e0       	ldi	r23, 0x00	; 0
 a28:	02 c0       	rjmp	.+4      	; 0xa2e <vfprintf+0x178>
 a2a:	6f ef       	ldi	r22, 0xFF	; 255
 a2c:	7f ef       	ldi	r23, 0xFF	; 255
 a2e:	c5 01       	movw	r24, r10
 a30:	0e 94 3c 06 	call	0xc78	; 0xc78 <strnlen_P>
 a34:	4c 01       	movw	r8, r24
 a36:	f3 2d       	mov	r31, r3
 a38:	f0 68       	ori	r31, 0x80	; 128
 a3a:	3f 2e       	mov	r3, r31
 a3c:	82 01       	movw	r16, r4
 a3e:	33 fc       	sbrc	r3, 3
 a40:	1b c0       	rjmp	.+54     	; 0xa78 <vfprintf+0x1c2>
 a42:	82 2d       	mov	r24, r2
 a44:	90 e0       	ldi	r25, 0x00	; 0
 a46:	88 16       	cp	r8, r24
 a48:	99 06       	cpc	r9, r25
 a4a:	b0 f4       	brcc	.+44     	; 0xa78 <vfprintf+0x1c2>
 a4c:	b6 01       	movw	r22, r12
 a4e:	80 e2       	ldi	r24, 0x20	; 32
 a50:	90 e0       	ldi	r25, 0x00	; 0
 a52:	0e 94 52 06 	call	0xca4	; 0xca4 <fputc>
 a56:	2a 94       	dec	r2
 a58:	f4 cf       	rjmp	.-24     	; 0xa42 <vfprintf+0x18c>
 a5a:	f5 01       	movw	r30, r10
 a5c:	37 fc       	sbrc	r3, 7
 a5e:	85 91       	lpm	r24, Z+
 a60:	37 fe       	sbrs	r3, 7
 a62:	81 91       	ld	r24, Z+
 a64:	5f 01       	movw	r10, r30
 a66:	b6 01       	movw	r22, r12
 a68:	90 e0       	ldi	r25, 0x00	; 0
 a6a:	0e 94 52 06 	call	0xca4	; 0xca4 <fputc>
 a6e:	21 10       	cpse	r2, r1
 a70:	2a 94       	dec	r2
 a72:	21 e0       	ldi	r18, 0x01	; 1
 a74:	82 1a       	sub	r8, r18
 a76:	91 08       	sbc	r9, r1
 a78:	81 14       	cp	r8, r1
 a7a:	91 04       	cpc	r9, r1
 a7c:	71 f7       	brne	.-36     	; 0xa5a <vfprintf+0x1a4>
 a7e:	e8 c0       	rjmp	.+464    	; 0xc50 <vfprintf+0x39a>
 a80:	84 36       	cpi	r24, 0x64	; 100
 a82:	11 f0       	breq	.+4      	; 0xa88 <vfprintf+0x1d2>
 a84:	89 36       	cpi	r24, 0x69	; 105
 a86:	41 f5       	brne	.+80     	; 0xad8 <vfprintf+0x222>
 a88:	f8 01       	movw	r30, r16
 a8a:	37 fe       	sbrs	r3, 7
 a8c:	07 c0       	rjmp	.+14     	; 0xa9c <vfprintf+0x1e6>
 a8e:	60 81       	ld	r22, Z
 a90:	71 81       	ldd	r23, Z+1	; 0x01
 a92:	82 81       	ldd	r24, Z+2	; 0x02
 a94:	93 81       	ldd	r25, Z+3	; 0x03
 a96:	0c 5f       	subi	r16, 0xFC	; 252
 a98:	1f 4f       	sbci	r17, 0xFF	; 255
 a9a:	08 c0       	rjmp	.+16     	; 0xaac <vfprintf+0x1f6>
 a9c:	60 81       	ld	r22, Z
 a9e:	71 81       	ldd	r23, Z+1	; 0x01
 aa0:	07 2e       	mov	r0, r23
 aa2:	00 0c       	add	r0, r0
 aa4:	88 0b       	sbc	r24, r24
 aa6:	99 0b       	sbc	r25, r25
 aa8:	0e 5f       	subi	r16, 0xFE	; 254
 aaa:	1f 4f       	sbci	r17, 0xFF	; 255
 aac:	f3 2d       	mov	r31, r3
 aae:	ff 76       	andi	r31, 0x6F	; 111
 ab0:	3f 2e       	mov	r3, r31
 ab2:	97 ff       	sbrs	r25, 7
 ab4:	09 c0       	rjmp	.+18     	; 0xac8 <vfprintf+0x212>
 ab6:	90 95       	com	r25
 ab8:	80 95       	com	r24
 aba:	70 95       	com	r23
 abc:	61 95       	neg	r22
 abe:	7f 4f       	sbci	r23, 0xFF	; 255
 ac0:	8f 4f       	sbci	r24, 0xFF	; 255
 ac2:	9f 4f       	sbci	r25, 0xFF	; 255
 ac4:	f0 68       	ori	r31, 0x80	; 128
 ac6:	3f 2e       	mov	r3, r31
 ac8:	2a e0       	ldi	r18, 0x0A	; 10
 aca:	30 e0       	ldi	r19, 0x00	; 0
 acc:	a3 01       	movw	r20, r6
 ace:	0e 94 8e 06 	call	0xd1c	; 0xd1c <__ultoa_invert>
 ad2:	88 2e       	mov	r8, r24
 ad4:	86 18       	sub	r8, r6
 ad6:	45 c0       	rjmp	.+138    	; 0xb62 <vfprintf+0x2ac>
 ad8:	85 37       	cpi	r24, 0x75	; 117
 ada:	31 f4       	brne	.+12     	; 0xae8 <vfprintf+0x232>
 adc:	23 2d       	mov	r18, r3
 ade:	2f 7e       	andi	r18, 0xEF	; 239
 ae0:	b2 2e       	mov	r11, r18
 ae2:	2a e0       	ldi	r18, 0x0A	; 10
 ae4:	30 e0       	ldi	r19, 0x00	; 0
 ae6:	25 c0       	rjmp	.+74     	; 0xb32 <vfprintf+0x27c>
 ae8:	93 2d       	mov	r25, r3
 aea:	99 7f       	andi	r25, 0xF9	; 249
 aec:	b9 2e       	mov	r11, r25
 aee:	8f 36       	cpi	r24, 0x6F	; 111
 af0:	c1 f0       	breq	.+48     	; 0xb22 <vfprintf+0x26c>
 af2:	18 f4       	brcc	.+6      	; 0xafa <vfprintf+0x244>
 af4:	88 35       	cpi	r24, 0x58	; 88
 af6:	79 f0       	breq	.+30     	; 0xb16 <vfprintf+0x260>
 af8:	b5 c0       	rjmp	.+362    	; 0xc64 <vfprintf+0x3ae>
 afa:	80 37       	cpi	r24, 0x70	; 112
 afc:	19 f0       	breq	.+6      	; 0xb04 <vfprintf+0x24e>
 afe:	88 37       	cpi	r24, 0x78	; 120
 b00:	21 f0       	breq	.+8      	; 0xb0a <vfprintf+0x254>
 b02:	b0 c0       	rjmp	.+352    	; 0xc64 <vfprintf+0x3ae>
 b04:	e9 2f       	mov	r30, r25
 b06:	e0 61       	ori	r30, 0x10	; 16
 b08:	be 2e       	mov	r11, r30
 b0a:	b4 fe       	sbrs	r11, 4
 b0c:	0d c0       	rjmp	.+26     	; 0xb28 <vfprintf+0x272>
 b0e:	fb 2d       	mov	r31, r11
 b10:	f4 60       	ori	r31, 0x04	; 4
 b12:	bf 2e       	mov	r11, r31
 b14:	09 c0       	rjmp	.+18     	; 0xb28 <vfprintf+0x272>
 b16:	34 fe       	sbrs	r3, 4
 b18:	0a c0       	rjmp	.+20     	; 0xb2e <vfprintf+0x278>
 b1a:	29 2f       	mov	r18, r25
 b1c:	26 60       	ori	r18, 0x06	; 6
 b1e:	b2 2e       	mov	r11, r18
 b20:	06 c0       	rjmp	.+12     	; 0xb2e <vfprintf+0x278>
 b22:	28 e0       	ldi	r18, 0x08	; 8
 b24:	30 e0       	ldi	r19, 0x00	; 0
 b26:	05 c0       	rjmp	.+10     	; 0xb32 <vfprintf+0x27c>
 b28:	20 e1       	ldi	r18, 0x10	; 16
 b2a:	30 e0       	ldi	r19, 0x00	; 0
 b2c:	02 c0       	rjmp	.+4      	; 0xb32 <vfprintf+0x27c>
 b2e:	20 e1       	ldi	r18, 0x10	; 16
 b30:	32 e0       	ldi	r19, 0x02	; 2
 b32:	f8 01       	movw	r30, r16
 b34:	b7 fe       	sbrs	r11, 7
 b36:	07 c0       	rjmp	.+14     	; 0xb46 <vfprintf+0x290>
 b38:	60 81       	ld	r22, Z
 b3a:	71 81       	ldd	r23, Z+1	; 0x01
 b3c:	82 81       	ldd	r24, Z+2	; 0x02
 b3e:	93 81       	ldd	r25, Z+3	; 0x03
 b40:	0c 5f       	subi	r16, 0xFC	; 252
 b42:	1f 4f       	sbci	r17, 0xFF	; 255
 b44:	06 c0       	rjmp	.+12     	; 0xb52 <vfprintf+0x29c>
 b46:	60 81       	ld	r22, Z
 b48:	71 81       	ldd	r23, Z+1	; 0x01
 b4a:	80 e0       	ldi	r24, 0x00	; 0
 b4c:	90 e0       	ldi	r25, 0x00	; 0
 b4e:	0e 5f       	subi	r16, 0xFE	; 254
 b50:	1f 4f       	sbci	r17, 0xFF	; 255
 b52:	a3 01       	movw	r20, r6
 b54:	0e 94 8e 06 	call	0xd1c	; 0xd1c <__ultoa_invert>
 b58:	88 2e       	mov	r8, r24
 b5a:	86 18       	sub	r8, r6
 b5c:	fb 2d       	mov	r31, r11
 b5e:	ff 77       	andi	r31, 0x7F	; 127
 b60:	3f 2e       	mov	r3, r31
 b62:	36 fe       	sbrs	r3, 6
 b64:	0d c0       	rjmp	.+26     	; 0xb80 <vfprintf+0x2ca>
 b66:	23 2d       	mov	r18, r3
 b68:	2e 7f       	andi	r18, 0xFE	; 254
 b6a:	a2 2e       	mov	r10, r18
 b6c:	89 14       	cp	r8, r9
 b6e:	58 f4       	brcc	.+22     	; 0xb86 <vfprintf+0x2d0>
 b70:	34 fe       	sbrs	r3, 4
 b72:	0b c0       	rjmp	.+22     	; 0xb8a <vfprintf+0x2d4>
 b74:	32 fc       	sbrc	r3, 2
 b76:	09 c0       	rjmp	.+18     	; 0xb8a <vfprintf+0x2d4>
 b78:	83 2d       	mov	r24, r3
 b7a:	8e 7e       	andi	r24, 0xEE	; 238
 b7c:	a8 2e       	mov	r10, r24
 b7e:	05 c0       	rjmp	.+10     	; 0xb8a <vfprintf+0x2d4>
 b80:	b8 2c       	mov	r11, r8
 b82:	a3 2c       	mov	r10, r3
 b84:	03 c0       	rjmp	.+6      	; 0xb8c <vfprintf+0x2d6>
 b86:	b8 2c       	mov	r11, r8
 b88:	01 c0       	rjmp	.+2      	; 0xb8c <vfprintf+0x2d6>
 b8a:	b9 2c       	mov	r11, r9
 b8c:	a4 fe       	sbrs	r10, 4
 b8e:	0f c0       	rjmp	.+30     	; 0xbae <vfprintf+0x2f8>
 b90:	fe 01       	movw	r30, r28
 b92:	e8 0d       	add	r30, r8
 b94:	f1 1d       	adc	r31, r1
 b96:	80 81       	ld	r24, Z
 b98:	80 33       	cpi	r24, 0x30	; 48
 b9a:	21 f4       	brne	.+8      	; 0xba4 <vfprintf+0x2ee>
 b9c:	9a 2d       	mov	r25, r10
 b9e:	99 7e       	andi	r25, 0xE9	; 233
 ba0:	a9 2e       	mov	r10, r25
 ba2:	09 c0       	rjmp	.+18     	; 0xbb6 <vfprintf+0x300>
 ba4:	a2 fe       	sbrs	r10, 2
 ba6:	06 c0       	rjmp	.+12     	; 0xbb4 <vfprintf+0x2fe>
 ba8:	b3 94       	inc	r11
 baa:	b3 94       	inc	r11
 bac:	04 c0       	rjmp	.+8      	; 0xbb6 <vfprintf+0x300>
 bae:	8a 2d       	mov	r24, r10
 bb0:	86 78       	andi	r24, 0x86	; 134
 bb2:	09 f0       	breq	.+2      	; 0xbb6 <vfprintf+0x300>
 bb4:	b3 94       	inc	r11
 bb6:	a3 fc       	sbrc	r10, 3
 bb8:	11 c0       	rjmp	.+34     	; 0xbdc <vfprintf+0x326>
 bba:	a0 fe       	sbrs	r10, 0
 bbc:	06 c0       	rjmp	.+12     	; 0xbca <vfprintf+0x314>
 bbe:	b2 14       	cp	r11, r2
 bc0:	88 f4       	brcc	.+34     	; 0xbe4 <vfprintf+0x32e>
 bc2:	28 0c       	add	r2, r8
 bc4:	92 2c       	mov	r9, r2
 bc6:	9b 18       	sub	r9, r11
 bc8:	0e c0       	rjmp	.+28     	; 0xbe6 <vfprintf+0x330>
 bca:	b2 14       	cp	r11, r2
 bcc:	60 f4       	brcc	.+24     	; 0xbe6 <vfprintf+0x330>
 bce:	b6 01       	movw	r22, r12
 bd0:	80 e2       	ldi	r24, 0x20	; 32
 bd2:	90 e0       	ldi	r25, 0x00	; 0
 bd4:	0e 94 52 06 	call	0xca4	; 0xca4 <fputc>
 bd8:	b3 94       	inc	r11
 bda:	f7 cf       	rjmp	.-18     	; 0xbca <vfprintf+0x314>
 bdc:	b2 14       	cp	r11, r2
 bde:	18 f4       	brcc	.+6      	; 0xbe6 <vfprintf+0x330>
 be0:	2b 18       	sub	r2, r11
 be2:	02 c0       	rjmp	.+4      	; 0xbe8 <vfprintf+0x332>
 be4:	98 2c       	mov	r9, r8
 be6:	21 2c       	mov	r2, r1
 be8:	a4 fe       	sbrs	r10, 4
 bea:	10 c0       	rjmp	.+32     	; 0xc0c <vfprintf+0x356>
 bec:	b6 01       	movw	r22, r12
 bee:	80 e3       	ldi	r24, 0x30	; 48
 bf0:	90 e0       	ldi	r25, 0x00	; 0
 bf2:	0e 94 52 06 	call	0xca4	; 0xca4 <fputc>
 bf6:	a2 fe       	sbrs	r10, 2
 bf8:	17 c0       	rjmp	.+46     	; 0xc28 <vfprintf+0x372>
 bfa:	a1 fc       	sbrc	r10, 1
 bfc:	03 c0       	rjmp	.+6      	; 0xc04 <vfprintf+0x34e>
 bfe:	88 e7       	ldi	r24, 0x78	; 120
 c00:	90 e0       	ldi	r25, 0x00	; 0
 c02:	02 c0       	rjmp	.+4      	; 0xc08 <vfprintf+0x352>
 c04:	88 e5       	ldi	r24, 0x58	; 88
 c06:	90 e0       	ldi	r25, 0x00	; 0
 c08:	b6 01       	movw	r22, r12
 c0a:	0c c0       	rjmp	.+24     	; 0xc24 <vfprintf+0x36e>
 c0c:	8a 2d       	mov	r24, r10
 c0e:	86 78       	andi	r24, 0x86	; 134
 c10:	59 f0       	breq	.+22     	; 0xc28 <vfprintf+0x372>
 c12:	a1 fe       	sbrs	r10, 1
 c14:	02 c0       	rjmp	.+4      	; 0xc1a <vfprintf+0x364>
 c16:	8b e2       	ldi	r24, 0x2B	; 43
 c18:	01 c0       	rjmp	.+2      	; 0xc1c <vfprintf+0x366>
 c1a:	80 e2       	ldi	r24, 0x20	; 32
 c1c:	a7 fc       	sbrc	r10, 7
 c1e:	8d e2       	ldi	r24, 0x2D	; 45
 c20:	b6 01       	movw	r22, r12
 c22:	90 e0       	ldi	r25, 0x00	; 0
 c24:	0e 94 52 06 	call	0xca4	; 0xca4 <fputc>
 c28:	89 14       	cp	r8, r9
 c2a:	38 f4       	brcc	.+14     	; 0xc3a <vfprintf+0x384>
 c2c:	b6 01       	movw	r22, r12
 c2e:	80 e3       	ldi	r24, 0x30	; 48
 c30:	90 e0       	ldi	r25, 0x00	; 0
 c32:	0e 94 52 06 	call	0xca4	; 0xca4 <fputc>
 c36:	9a 94       	dec	r9
 c38:	f7 cf       	rjmp	.-18     	; 0xc28 <vfprintf+0x372>
 c3a:	8a 94       	dec	r8
 c3c:	f3 01       	movw	r30, r6
 c3e:	e8 0d       	add	r30, r8
 c40:	f1 1d       	adc	r31, r1
 c42:	80 81       	ld	r24, Z
 c44:	b6 01       	movw	r22, r12
 c46:	90 e0       	ldi	r25, 0x00	; 0
 c48:	0e 94 52 06 	call	0xca4	; 0xca4 <fputc>
 c4c:	81 10       	cpse	r8, r1
 c4e:	f5 cf       	rjmp	.-22     	; 0xc3a <vfprintf+0x384>
 c50:	22 20       	and	r2, r2
 c52:	09 f4       	brne	.+2      	; 0xc56 <vfprintf+0x3a0>
 c54:	42 ce       	rjmp	.-892    	; 0x8da <vfprintf+0x24>
 c56:	b6 01       	movw	r22, r12
 c58:	80 e2       	ldi	r24, 0x20	; 32
 c5a:	90 e0       	ldi	r25, 0x00	; 0
 c5c:	0e 94 52 06 	call	0xca4	; 0xca4 <fputc>
 c60:	2a 94       	dec	r2
 c62:	f6 cf       	rjmp	.-20     	; 0xc50 <vfprintf+0x39a>
 c64:	f6 01       	movw	r30, r12
 c66:	86 81       	ldd	r24, Z+6	; 0x06
 c68:	97 81       	ldd	r25, Z+7	; 0x07
 c6a:	02 c0       	rjmp	.+4      	; 0xc70 <vfprintf+0x3ba>
 c6c:	8f ef       	ldi	r24, 0xFF	; 255
 c6e:	9f ef       	ldi	r25, 0xFF	; 255
 c70:	2b 96       	adiw	r28, 0x0b	; 11
 c72:	e2 e1       	ldi	r30, 0x12	; 18
 c74:	0c 94 08 07 	jmp	0xe10	; 0xe10 <__epilogue_restores__>

00000c78 <strnlen_P>:
 c78:	fc 01       	movw	r30, r24
 c7a:	05 90       	lpm	r0, Z+
 c7c:	61 50       	subi	r22, 0x01	; 1
 c7e:	70 40       	sbci	r23, 0x00	; 0
 c80:	01 10       	cpse	r0, r1
 c82:	d8 f7       	brcc	.-10     	; 0xc7a <strnlen_P+0x2>
 c84:	80 95       	com	r24
 c86:	90 95       	com	r25
 c88:	8e 0f       	add	r24, r30
 c8a:	9f 1f       	adc	r25, r31
 c8c:	08 95       	ret

00000c8e <strnlen>:
 c8e:	fc 01       	movw	r30, r24
 c90:	61 50       	subi	r22, 0x01	; 1
 c92:	70 40       	sbci	r23, 0x00	; 0
 c94:	01 90       	ld	r0, Z+
 c96:	01 10       	cpse	r0, r1
 c98:	d8 f7       	brcc	.-10     	; 0xc90 <strnlen+0x2>
 c9a:	80 95       	com	r24
 c9c:	90 95       	com	r25
 c9e:	8e 0f       	add	r24, r30
 ca0:	9f 1f       	adc	r25, r31
 ca2:	08 95       	ret

00000ca4 <fputc>:
 ca4:	0f 93       	push	r16
 ca6:	1f 93       	push	r17
 ca8:	cf 93       	push	r28
 caa:	df 93       	push	r29
 cac:	fb 01       	movw	r30, r22
 cae:	23 81       	ldd	r18, Z+3	; 0x03
 cb0:	21 fd       	sbrc	r18, 1
 cb2:	03 c0       	rjmp	.+6      	; 0xcba <fputc+0x16>
 cb4:	8f ef       	ldi	r24, 0xFF	; 255
 cb6:	9f ef       	ldi	r25, 0xFF	; 255
 cb8:	2c c0       	rjmp	.+88     	; 0xd12 <fputc+0x6e>
 cba:	22 ff       	sbrs	r18, 2
 cbc:	16 c0       	rjmp	.+44     	; 0xcea <fputc+0x46>
 cbe:	46 81       	ldd	r20, Z+6	; 0x06
 cc0:	57 81       	ldd	r21, Z+7	; 0x07
 cc2:	24 81       	ldd	r18, Z+4	; 0x04
 cc4:	35 81       	ldd	r19, Z+5	; 0x05
 cc6:	42 17       	cp	r20, r18
 cc8:	53 07       	cpc	r21, r19
 cca:	44 f4       	brge	.+16     	; 0xcdc <fputc+0x38>
 ccc:	a0 81       	ld	r26, Z
 cce:	b1 81       	ldd	r27, Z+1	; 0x01
 cd0:	9d 01       	movw	r18, r26
 cd2:	2f 5f       	subi	r18, 0xFF	; 255
 cd4:	3f 4f       	sbci	r19, 0xFF	; 255
 cd6:	31 83       	std	Z+1, r19	; 0x01
 cd8:	20 83       	st	Z, r18
 cda:	8c 93       	st	X, r24
 cdc:	26 81       	ldd	r18, Z+6	; 0x06
 cde:	37 81       	ldd	r19, Z+7	; 0x07
 ce0:	2f 5f       	subi	r18, 0xFF	; 255
 ce2:	3f 4f       	sbci	r19, 0xFF	; 255
 ce4:	37 83       	std	Z+7, r19	; 0x07
 ce6:	26 83       	std	Z+6, r18	; 0x06
 ce8:	14 c0       	rjmp	.+40     	; 0xd12 <fputc+0x6e>
 cea:	8b 01       	movw	r16, r22
 cec:	ec 01       	movw	r28, r24
 cee:	fb 01       	movw	r30, r22
 cf0:	00 84       	ldd	r0, Z+8	; 0x08
 cf2:	f1 85       	ldd	r31, Z+9	; 0x09
 cf4:	e0 2d       	mov	r30, r0
 cf6:	09 95       	icall
 cf8:	89 2b       	or	r24, r25
 cfa:	e1 f6       	brne	.-72     	; 0xcb4 <fputc+0x10>
 cfc:	d8 01       	movw	r26, r16
 cfe:	16 96       	adiw	r26, 0x06	; 6
 d00:	8d 91       	ld	r24, X+
 d02:	9c 91       	ld	r25, X
 d04:	17 97       	sbiw	r26, 0x07	; 7
 d06:	01 96       	adiw	r24, 0x01	; 1
 d08:	17 96       	adiw	r26, 0x07	; 7
 d0a:	9c 93       	st	X, r25
 d0c:	8e 93       	st	-X, r24
 d0e:	16 97       	sbiw	r26, 0x06	; 6
 d10:	ce 01       	movw	r24, r28
 d12:	df 91       	pop	r29
 d14:	cf 91       	pop	r28
 d16:	1f 91       	pop	r17
 d18:	0f 91       	pop	r16
 d1a:	08 95       	ret

00000d1c <__ultoa_invert>:
 d1c:	fa 01       	movw	r30, r20
 d1e:	aa 27       	eor	r26, r26
 d20:	28 30       	cpi	r18, 0x08	; 8
 d22:	51 f1       	breq	.+84     	; 0xd78 <__ultoa_invert+0x5c>
 d24:	20 31       	cpi	r18, 0x10	; 16
 d26:	81 f1       	breq	.+96     	; 0xd88 <__ultoa_invert+0x6c>
 d28:	e8 94       	clt
 d2a:	6f 93       	push	r22
 d2c:	6e 7f       	andi	r22, 0xFE	; 254
 d2e:	6e 5f       	subi	r22, 0xFE	; 254
 d30:	7f 4f       	sbci	r23, 0xFF	; 255
 d32:	8f 4f       	sbci	r24, 0xFF	; 255
 d34:	9f 4f       	sbci	r25, 0xFF	; 255
 d36:	af 4f       	sbci	r26, 0xFF	; 255
 d38:	b1 e0       	ldi	r27, 0x01	; 1
 d3a:	3e d0       	rcall	.+124    	; 0xdb8 <__ultoa_invert+0x9c>
 d3c:	b4 e0       	ldi	r27, 0x04	; 4
 d3e:	3c d0       	rcall	.+120    	; 0xdb8 <__ultoa_invert+0x9c>
 d40:	67 0f       	add	r22, r23
 d42:	78 1f       	adc	r23, r24
 d44:	89 1f       	adc	r24, r25
 d46:	9a 1f       	adc	r25, r26
 d48:	a1 1d       	adc	r26, r1
 d4a:	68 0f       	add	r22, r24
 d4c:	79 1f       	adc	r23, r25
 d4e:	8a 1f       	adc	r24, r26
 d50:	91 1d       	adc	r25, r1
 d52:	a1 1d       	adc	r26, r1
 d54:	6a 0f       	add	r22, r26
 d56:	71 1d       	adc	r23, r1
 d58:	81 1d       	adc	r24, r1
 d5a:	91 1d       	adc	r25, r1
 d5c:	a1 1d       	adc	r26, r1
 d5e:	20 d0       	rcall	.+64     	; 0xda0 <__ultoa_invert+0x84>
 d60:	09 f4       	brne	.+2      	; 0xd64 <__ultoa_invert+0x48>
 d62:	68 94       	set
 d64:	3f 91       	pop	r19
 d66:	2a e0       	ldi	r18, 0x0A	; 10
 d68:	26 9f       	mul	r18, r22
 d6a:	11 24       	eor	r1, r1
 d6c:	30 19       	sub	r19, r0
 d6e:	30 5d       	subi	r19, 0xD0	; 208
 d70:	31 93       	st	Z+, r19
 d72:	de f6       	brtc	.-74     	; 0xd2a <__ultoa_invert+0xe>
 d74:	cf 01       	movw	r24, r30
 d76:	08 95       	ret
 d78:	46 2f       	mov	r20, r22
 d7a:	47 70       	andi	r20, 0x07	; 7
 d7c:	40 5d       	subi	r20, 0xD0	; 208
 d7e:	41 93       	st	Z+, r20
 d80:	b3 e0       	ldi	r27, 0x03	; 3
 d82:	0f d0       	rcall	.+30     	; 0xda2 <__ultoa_invert+0x86>
 d84:	c9 f7       	brne	.-14     	; 0xd78 <__ultoa_invert+0x5c>
 d86:	f6 cf       	rjmp	.-20     	; 0xd74 <__ultoa_invert+0x58>
 d88:	46 2f       	mov	r20, r22
 d8a:	4f 70       	andi	r20, 0x0F	; 15
 d8c:	40 5d       	subi	r20, 0xD0	; 208
 d8e:	4a 33       	cpi	r20, 0x3A	; 58
 d90:	18 f0       	brcs	.+6      	; 0xd98 <__ultoa_invert+0x7c>
 d92:	49 5d       	subi	r20, 0xD9	; 217
 d94:	31 fd       	sbrc	r19, 1
 d96:	40 52       	subi	r20, 0x20	; 32
 d98:	41 93       	st	Z+, r20
 d9a:	02 d0       	rcall	.+4      	; 0xda0 <__ultoa_invert+0x84>
 d9c:	a9 f7       	brne	.-22     	; 0xd88 <__ultoa_invert+0x6c>
 d9e:	ea cf       	rjmp	.-44     	; 0xd74 <__ultoa_invert+0x58>
 da0:	b4 e0       	ldi	r27, 0x04	; 4
 da2:	a6 95       	lsr	r26
 da4:	97 95       	ror	r25
 da6:	87 95       	ror	r24
 da8:	77 95       	ror	r23
 daa:	67 95       	ror	r22
 dac:	ba 95       	dec	r27
 dae:	c9 f7       	brne	.-14     	; 0xda2 <__ultoa_invert+0x86>
 db0:	00 97       	sbiw	r24, 0x00	; 0
 db2:	61 05       	cpc	r22, r1
 db4:	71 05       	cpc	r23, r1
 db6:	08 95       	ret
 db8:	9b 01       	movw	r18, r22
 dba:	ac 01       	movw	r20, r24
 dbc:	0a 2e       	mov	r0, r26
 dbe:	06 94       	lsr	r0
 dc0:	57 95       	ror	r21
 dc2:	47 95       	ror	r20
 dc4:	37 95       	ror	r19
 dc6:	27 95       	ror	r18
 dc8:	ba 95       	dec	r27
 dca:	c9 f7       	brne	.-14     	; 0xdbe <__ultoa_invert+0xa2>
 dcc:	62 0f       	add	r22, r18
 dce:	73 1f       	adc	r23, r19
 dd0:	84 1f       	adc	r24, r20
 dd2:	95 1f       	adc	r25, r21
 dd4:	a0 1d       	adc	r26, r0
 dd6:	08 95       	ret

00000dd8 <__prologue_saves__>:
 dd8:	2f 92       	push	r2
 dda:	3f 92       	push	r3
 ddc:	4f 92       	push	r4
 dde:	5f 92       	push	r5
 de0:	6f 92       	push	r6
 de2:	7f 92       	push	r7
 de4:	8f 92       	push	r8
 de6:	9f 92       	push	r9
 de8:	af 92       	push	r10
 dea:	bf 92       	push	r11
 dec:	cf 92       	push	r12
 dee:	df 92       	push	r13
 df0:	ef 92       	push	r14
 df2:	ff 92       	push	r15
 df4:	0f 93       	push	r16
 df6:	1f 93       	push	r17
 df8:	cf 93       	push	r28
 dfa:	df 93       	push	r29
 dfc:	cd b7       	in	r28, 0x3d	; 61
 dfe:	de b7       	in	r29, 0x3e	; 62
 e00:	ca 1b       	sub	r28, r26
 e02:	db 0b       	sbc	r29, r27
 e04:	0f b6       	in	r0, 0x3f	; 63
 e06:	f8 94       	cli
 e08:	de bf       	out	0x3e, r29	; 62
 e0a:	0f be       	out	0x3f, r0	; 63
 e0c:	cd bf       	out	0x3d, r28	; 61
 e0e:	09 94       	ijmp

00000e10 <__epilogue_restores__>:
 e10:	2a 88       	ldd	r2, Y+18	; 0x12
 e12:	39 88       	ldd	r3, Y+17	; 0x11
 e14:	48 88       	ldd	r4, Y+16	; 0x10
 e16:	5f 84       	ldd	r5, Y+15	; 0x0f
 e18:	6e 84       	ldd	r6, Y+14	; 0x0e
 e1a:	7d 84       	ldd	r7, Y+13	; 0x0d
 e1c:	8c 84       	ldd	r8, Y+12	; 0x0c
 e1e:	9b 84       	ldd	r9, Y+11	; 0x0b
 e20:	aa 84       	ldd	r10, Y+10	; 0x0a
 e22:	b9 84       	ldd	r11, Y+9	; 0x09
 e24:	c8 84       	ldd	r12, Y+8	; 0x08
 e26:	df 80       	ldd	r13, Y+7	; 0x07
 e28:	ee 80       	ldd	r14, Y+6	; 0x06
 e2a:	fd 80       	ldd	r15, Y+5	; 0x05
 e2c:	0c 81       	ldd	r16, Y+4	; 0x04
 e2e:	1b 81       	ldd	r17, Y+3	; 0x03
 e30:	aa 81       	ldd	r26, Y+2	; 0x02
 e32:	b9 81       	ldd	r27, Y+1	; 0x01
 e34:	ce 0f       	add	r28, r30
 e36:	d1 1d       	adc	r29, r1
 e38:	0f b6       	in	r0, 0x3f	; 63
 e3a:	f8 94       	cli
 e3c:	de bf       	out	0x3e, r29	; 62
 e3e:	0f be       	out	0x3f, r0	; 63
 e40:	cd bf       	out	0x3d, r28	; 61
 e42:	ed 01       	movw	r28, r26
 e44:	08 95       	ret

00000e46 <_exit>:
 e46:	f8 94       	cli

00000e48 <__stop_program>:
 e48:	ff cf       	rjmp	.-2      	; 0xe48 <__stop_program>
